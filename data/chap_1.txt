Sentence 1: 4 Chapter 1 Introduction 1.1 What Operating Systems Do We begin our discussion by looking at the operating system’s role in the overallcomputersystem.Acomputersystemcanbedividedroughlyintofour components: the hardware, theoperating system, theapplication programs, and a user(Figure1.1).
Sentence 2: The hardware —the central processing unit ( CPU), the memory, and the input/output ( I/O) devices—provides the basic computing resources for the system.
Sentence 3: The application programs —such as word processors, spreadsheets, compilers, and web browsers—define the ways in which these resources are used to solve users’ computing problems.
Sentence 4: The operating system controls the hardwareandcoordinatesitsuseamongthevariousapplicationprogramsfor thevarious users.
Sentence 5: We can also view a computer system as consisting of hardware, software, and data.
Sentence 6: The operating system provides the means for proper use of these resources in the operation of the computer system.
Sentence 7: An operating system is similar to a government.
Sentence 8: Like a government, it performs no useful function byitself.Itsimplyprovidesan environment within which otherprogramscan dousefulwork.
Sentence 9: To understand more fully the operating system’s role, we next explore operatingsystemsfromtwoviewpoints:thatoftheuserandthatofthesystem.
Sentence 10: 1.1.1 User View The user’s view of the computer varies according to the interface being used.
Sentence 11: Many computer users sit with a laptop or in front of a PCconsisting of a monitor, keyboard, and mouse.
Sentence 12: Such a system is designed for one user to monopolize its resources.
Sentence 13: The goal is to maximize the work (or play) that the user is performing.
Sentence 14: In this case, the operating system is designed mostly for ease of use , with some attention paid to performance and security and none paid to resource utilization —how various hardware and software resources areshared.
Sentence 15: (compilers, web browsers, development kits, etc.)user application programs operating system computer hardware (CPU, memory, I/O devices, etc.) Figure 1.1 Abstract view of the components of a computer system.
Sentence 16: 1.1 What Operating Systems Do 5 Increasingly,manyusersinteractwithmobiledevicessuchassmartphones andtablets—devicesthatarereplacingdesktopandlaptopcomputersystems for some users.
Sentence 17: These devices are typically connected to networks through cellularorotherwirelesstechnologies.T heuserinterfaceformobilecomputers generallyfeaturesa touch screen , where theuserinteracts with the systemby pressing and swiping fingers across the screen rather than using a physical keyboardandmouse.Manymobiledevice salsoallowuserstointeractthrough avoice recognition interface,such asApple’s Siri.
Sentence 18: Somecomputershavelittleornouserview.Forexample, embedded com- putersinhomedevicesandautomobilesmayhavenumerickeypadsandmay turnindicatorlightsonorofftoshowstatus,buttheyandtheiroperatingsys- temsandapplicationsaredesignedprimarilytorunwithoutuserintervention.
Sentence 19: 1.1.2 System View From thecomputer’s point of view,the operating systemis the programmost intimately involved with the hardwar e.
Sentence 20: In this context, we can view an oper- ating system as a resource allocator .
Sentence 21: Acomputer system has many resources that may be required to solve a problem: CPUtime, memory space, storage space,I/Odevices,andsoon.Theoperatingsystemactsasthemanagerofthese resources.Facingnumerousandpossiblyc onflictingrequestsforresources,the operating system must decide how to allocate them to specific programs and userssothat itcan operatethe computersystemefficientlyand fairly.
Sentence 22: A slightly different view of an operating system emphasizes the need to control the various I/Odevices and user programs.
Sentence 23: An operating system is a control program.
Sentence 24: A control program manages the execution of user programs topreventerrorsand improperuseof thecomputer.Itis especiallyconcerned with the operationand control of I/Odevices.
Sentence 25: 1.1.3 Deﬁning Operating Systems By now, you can probably see that the term operating system covers many roles and functions.
Sentence 26: That is the case, at least in part, because of the myriad designs and uses of computers.
Sentence 27: Computers are present within toasters, cars, ships,spacecraft,homes,andbusinesses.Theyarethebasisforgamemachines, cableTVtuners,and industrialcontrol systems.
Sentence 28: Toexplainthisdiversity,wecanturntothehistoryofcomputers.Although computershavearelativelyshorthistory,theyhaveevolvedrapidly.Comput- ing started as an experiment to determine what could be done and quickly moved to fixed-purpose systems for military uses, such as code breaking and trajectory plotting, and governmental uses, such as census calculation.
Sentence 29: Those earlycomputersevolvedintogeneral-pu rpose,multifunctionmainframes,and that’swhenoperatingsystemswereborn.Inthe1960s, Moore’s Law predicted that the number of transistors on an integrated circuit would double every 18 months, and that prediction has held true.
Sentence 30: Computers gained in functionality and shrank in size, leading to a vast number of uses and a vast number and variety of operating systems.
Sentence 31: (See Appendix Afor more details on the history ofoperating systems.) How,then,canwedefinewhatanoperatingsystemis?Ingeneral,wehave no completelyadequatedefinitionof an operating system.Operatingsystems 6 Chapter 1 Introduction exist because they offer a reasonable way to solve the problem of creating a usable computing system.
Sentence 32: The fundamental goal of computer systems is to execute programs and to make solving user problems easier.
Sentence 33: Computer hardware is constructed toward this goal.
Sentence 34: Since bare hardware alone is not particularlyeasytouse,applicationprogramsaredeveloped.Theseprograms require certain common operations, such as those controlling the I/Odevices.
Sentence 35: Thecommonfunctionsofcontrollingandallocatingresourcesarethenbrought togetherinto onepieceof software:theoperatingsystem.
Sentence 36: In addition, we have no universally accepted definition of what is part of the operatingsystem.Asimpleviewpoin tisthat itincludes everythinga ven- dorshipswhenyouorder “theoperatingsystem.
Sentence 37: ”Thefeaturesincluded,how- ever, vary greatly across systems.
Sentence 38: Some systems take up less than a megabyte of space and lack even a full-screen editor, whereas others require gigabytes ofspaceandarebasedentirelyongraphicalwindowingsystems.Amorecom- mondefinition,andtheonethatweusuallyfollow,isthattheoperatingsystem is the one program running at all times on the computer—usually called the kernel.
Sentence 39: Along with the kernel, there are two other types of programs: system programs , which are associated with the operating system but are not neces- sarilypartofthekernel,andapplicationprograms,whichincludeallprograms not associatedwith the operationof thesystem.
Sentence 40: The matter of what constitutes an operating system became increasingly importantaspersonalcomputersbecamemorewidespreadandoperatingsys- temsgrewincreasinglysophisticated.In1998,theUnitedStatesDepartmentof JusticefiledsuitagainstMicrosoft,ine ssenceclaimingthatMicrosoftincluded toomuchfunctionalityinitsoperatin gsystemsandthuspreventedapplication vendorsfromcompeting.(Forexample,awebbrowserwasanintegralpartof Microsoft’soperatingsystems.)Asaresult,Microsoftwasfoundguiltyofusing itsoperating-systemmonopoly to limitcompetition.
Sentence 41: Today, however, if we look at operating systems for mobile devices, we see that once again the number of features constituting the operating system is increasing.
Sentence 42: Mobile operating systems often include not only a core kernel but also middleware —a set of software frameworks that provide additional services to application developers.
Sentence 43: For example, each of the two most promi- nentmobileoperatingsystems—Apple’si OSandGoogle’sAndroid—features WHY STUDY OPERATING SYSTEMS?
Sentence 44: Althoughtherearemanypractitionerso fcomputerscience,onlyasmallper- centageofthemwillbeinvolvedinthecreationormodificationofanoperat- ingsystem.Why,then,studyoperatin gsystemsandhowtheywork?Simply because, as almost all code runs on top of an operating system, knowledge of how operating systems work is crucial to proper, efficient, effective, and secureprogramming.Understandingth efundamentalsofoperatingsystems, howtheydrivecomputerhardware,andwhattheyprovidetoapplicationsis notonlyessentialtothosewhoprogramthembutalsohighlyusefultothose who writeprogramsonthemandusethem.
Sentence 45: 1.2 Computer-System Organization 7 acorekernelalongwithmiddlewarethatsupportsdatabases,multimedia,and graphics(to name only a few).
Sentence 46: In summary, for our purposes, the operating system includes the always- running kernel, middleware frameworks that ease application development and provide features, and system programs that aid in managing the system while it is running.
Sentence 47: Most of this text is concerned with the kernel of general- purpose operating systems, but other components are discussed as needed to fullyexplainoperatingsystemdesignand operation.
Sentence 48: 1.2 Computer-System Organization Amoderngeneral-purposecomputersystemconsistsofoneormore CPUsand anumberofdevicecontrollersconnectedthroughacommon busthatprovides access between components and shared memory (Figure 1.2).
Sentence 49: Each device controller is in charge of a specific type of device (for example, a disk drive, audiodevice,orgraphicsdisplay).Dependingonthecontroller,morethanone device may be attached.
Sentence 50: For instance, one system USBport can connect to a USBhub, to which several devices can connect.
Sentence 51: Adevice controller maintains some local buffer storage and a set of special-purpose registers.
Sentence 52: The device controller is responsible for moving the data between the peripheral devices thatit controls andits localbuffer storage.
Sentence 53: Typically, operating systems have a device driver for each device con- troller.
Sentence 54: This device driver understand s the device controller and provides the restoftheoperatingsystemwithauniforminterfacetothedevice.The CPUand thedevicecontrollerscanexecuteinparallel,competingformemorycycles.To ensureorderlyaccesstothesharedmemory,amemorycontrollersynchronizes access tothe memory.
Sentence 55: Inthefollowingsubsections,wedescribesomebasicsofhowsuchasystem operates,focusingonthreekeyaspectsofthesystem.Westartwithinterrupts, which alert the CPUto events that require attention.
Sentence 56: We then discuss storage structureand I/Ostructure.
Sentence 57: USB controllerkeyboard printer mouse monitor disks graphics adapterdisk controller memoryCPU system buson-line Figure 1.2 A typical PC computer system.
Sentence 58: 8 Chapter 1 Introduction 1.2.1 Interrupts Consideratypicalcomputeroperation:aprogramperforming I/O.T ostartan I/Ooperation, the device driver loads the appropriate registers in the device controller.
Sentence 59: The device controller, in turn, examines the contents of these reg- isters to determine what action to take (such as “read a character from the keyboard ”).Thecontrollerstartsthetransferofdatafromthedevicetoitslocal buffer.
Sentence 60: Once the transfer of data is complete, the device controller informs the device driver that it has finished its operation.
Sentence 61: The device driver then gives control tootherpartsoftheoperatingsystem,possiblyreturningthedataora pointertothedataiftheoperationwasaread.Forotheroperations,thedevice driver returns status information such as “write completed successfully ”or “devicebusy ”.Buthowdoesthecontrollerinformthedevicedriverthatithas finished itsoperation?
Sentence 62: Thisisaccomplished viaan interrupt .
Sentence 63: 1.2.1.1 Overview Hardware may trigger an interrupt at any time by sending a signal to the CPU, usually by way of the system bus.
Sentence 64: (There may be many buses within a computer system, but the system bus is the main communications path betweenthemajorcomponents.) Interruptsareusedfor manyother purposes as wellandarea keypartof how operatingsystemsandhardware interact.
Sentence 65: When the CPUis interrupted, it stops what it is doing and immediately transfers execution to a fixed location.
Sentence 66: The fixed location usually contains the starting address where the service routine for the interrupt is located.
Sentence 67: The interrupt service routine executes; on completion, the CPUresumes the interrupted computation.
Sentence 68: Atimeline of this operation is shown in Figure 1.3. To runthe animation assicatedwith thisfigure pleaseclick here.
Sentence 69: Interruptsareanimportantpartofacomputerarchitecture.Eachcomputer design has its own interrupt mechanism, but several functions are common.
Sentence 70: Theinterruptmusttransfercontroltotheappropriateinterruptserviceroutine.
Sentence 71: The straightforward method for managing this transfer would be to invoke a generic routine to examine the interrupt information.
Sentence 72: The routine, in turn, Figure 1.3 Interrupt timeline for a single program doing output.
Sentence 73: 1.2 Computer-System Organization 9 wouldcalltheinterrupt-specifichandler.However,interruptsmustbehandled quickly,astheyoccur veryfrequently.At ableofpointerstointerruptroutines can be used instead to provide the necessary speed.
Sentence 74: The interrupt routine is called indirectly through the table, with no intermediate routine needed.
Sentence 75: Generally,thetableofpointersisstoredinlowmemory(thefirsthundredorso locations).
Sentence 76: Theselocations holdthe addressesof the interruptserviceroutines for the various devices.
Sentence 77: This array, or interrupt vector , of addresses is then indexed by a unique number, given with the interrupt request, to provide the addressof the interrupt service routine for the interrupting device.Operating systemsasdifferentasWindowsand UNIXdispatchinterruptsinthismanner.
Sentence 78: Theinterruptarchitecturemustalsosavethestateinformationofwhatever was interrupted, so that it can restore this information after servicing the interrupt.
Sentence 79: If the interrupt routine needs to modify the processor state—for instance,bymodifyingregistervalues—itmustexplicitlysavethecurrentstate andthenrestorethatstatebeforereturning.Aftertheinterruptisserviced,the saved return address is loaded into the program counter, and the interrupted computationresumesas thoughthe interrupthad not occurred.
Sentence 80: 1.2.1.2 Implementation The basic interrupt mechanism works as follows.
Sentence 81: The CPUhardware has a wirecalledthe interrupt-request line thatthe CPUsensesafterexecutingevery instruction.
Sentence 82: When the CPUdetects that a controller has asserted a signal on the interrupt-request line, it reads the interrupt number and jumps to the interrupt-handler routine by using that interrupt number as an index into the interrupt vector.
Sentence 83: It then starts execution at the address associated with that index.
Sentence 84: The interrupt handler saves any state it will be changing during its operation, determines the cause of the interrupt, performs the necessary processing, performs a state restore, and executes a return  from  interrupt instruction to return the CPUto the execution state prior to the interrupt.
Sentence 85: We say that the device controller raisesan interrupt by asserting a signal on the interrupt request line, the CPUcatchesthe interrupt and dispatches it to the interrupthandler,andthehandler clearstheinterruptbyservicingthedevice.
Sentence 86: Figure1.4 summarizestheinterrupt-driven I/Ocycle.
Sentence 87: Thebasicinterruptmechanismjustdescribedenablesthe CPUtorespondto anasynchronousevent,aswhenadevicecontrollerbecomesreadyforservice.
Sentence 88: Inamodernoperatingsystem,however,weneedmoresophisticatedinterrupt- handling features.
Sentence 89: 1.Weneedtheabilitytodeferinterrupth andlingduringcriticalprocessing.
Sentence 90: 2.We need an efficient way to dispatch to the proper interrupt handler for adevice.
Sentence 91: 3.We need multilevel interrupts, so that the operating system can distin- guish between high- and low-priority interrupts and can respond with theappr opriatedegr eeofur gency .
Sentence 92: In modern computer hardware, these three features are provided by the CPU and the interrupt-controller hardware .
Sentence 93: 10 Chapter 1 Introduction device driver initiates I/O CPU receiving interrupt, transfers control to interrupt handler CPU resumes processing of interrupted taskCPU 1I/O controller CPU executing checks for interrupts between instructions 5 interrupt handler processes data, returns from interruptinitiates I/O 32 4 7input ready, output complete, or error generates interrupt signal 6 Figure 1.4 Interrupt-driven I/O cycle.
Sentence 94: MostCPUs have two interrupt request lines.
Sentence 95: One is the nonmaskable interrupt , which is reservedfor events such as unrecoverable memory errors.
Sentence 96: The second interrupt line is maskable :i tc a nb et u r n e do f fb yt h e CPUbefore theexecutionofcriticalinstructionsequencesthatmustnotbeinterrupted.The maskableinterruptisusedby devicecontrollers torequestservice.
Sentence 97: Recallthatthepurposeofavectoredinterruptmechanismistoreducethe need for a single interrupt handler to search all possible sources of interrupts to determine which one needs service.
Sentence 98: In practice, however, computers have moredevices(and,hence,interrupthandlers)thantheyhaveaddresselements intheinterruptvector.Acommonwaytosolvethisproblemistouse interrupt chaining , in which each element in the interrupt vector points to the head of a list of interrupt handlers.
Sentence 99: When an interrupt is raised, the handlers on the corresponding list are called one by one, until one is found that can service the request.
Sentence 100: This structure is a compromise between the overhead of a huge interrupttableandtheinefficiencyofdispatchingtoasingleinterrupthandler.
Sentence 101: Figure1.5illustratesthedesignoftheinterruptvectorforIntelprocessors.
Sentence 102: The events from 0 to 31, which are nonmaskable, are used to signal various error conditions.
Sentence 103: The events from 32 to 255, which are maskable, are used for purposessuchas device-generatedinterrupts.
Sentence 104: The interrupt mechanism also implements a system of interrupt priority levels.
Sentence 105: Theselevelsenable the CPUto deferthe handling of low-priorityinter- 1.2 Computer-System Organization 11 description vector number 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19–31 32–255divide error debug exception null interrupt breakpoint INTO-detected overflow bound range exception invalid opcode device not available double fault coprocessor segment overrun (reserved) invalid task state segment segment not present stack fault general protection page fault (Intel reserved, do not use) floating-point error alignment check machine check (Intel reserved, do not use) maskable interrupts Figure 1.5 Intel processor event-vector table.
Sentence 106: rupts without masking all interrupts and makes it possible for a high-priority interrupttopreemptthe executionof alow-priorityinterrupt.
Sentence 107: Insummary,interruptsareusedthroughoutmodernoperatingsystemsto handleasynchronousevents(andforotherpurposeswewilldiscussthrough- outthetext).Devicecontrollersandhardwarefaultsraiseinterrupts.Toenable the most urgent work to be done first, modern computers use a system of interrupt priorities.
Sentence 108: Because interrupts are used so heavily for time-sensitive processing, efficient interrupt handling is required for good system perfor- mance.
Sentence 109: 1.2.2 Storage Structure TheCPUcan load instructions only from memory, so any programs must first be loaded into memory to run.
Sentence 110: General-purpose computers run most of their programs from rewritable memory, called main memory (also called random-access memory ,orRAM).Mainmemorycommonlyisimplementedin asemiconductortechnologycalled dynamic random-access memory (DRAM).
Sentence 111: Computersuseother forms of memoryas well.For example,the firstpro- gram to runon computer power-on isa bootstrap program ,w h ic hth enlo a ds the operating system.
Sentence 112: Since RAMisvolatile—loses its content when power is turned off or otherwise lost—we cannot trust it to hold the bootstrap pro- gram.
Sentence 113: Instead, for this and some other purposes, the computer uses electri- callyerasableprogrammableread-onlymemory( EEPROM) and otherformsof firmwar —storage that is infrequently written to and is nonvolatile.
Sentence 114: EEPROM 12 Chapter 1 Introduction STORAGE DEFINITIONS AND NOTATION The basic unit of computer storage is the bit.
Sentence 115: A bit can contain one of two values,0and1.Allotherstorageinacomputerisbasedoncollectionsofbits.
Sentence 116: Givenenoughbits,itisamazinghowmanythingsacomputercanrepresent: numbers,letters,images,movies,sounds,documents,andprograms,toname af e w .A byteis 8 bits, and on most computers it is the smallest convenient chunk of storage.
Sentence 117: For example, most computersdon’t have an instruction to move a bit but do have one to move a byte.
Sentence 118: A less common term is word, whichisagivencomputerarchitecture’snativeunitofdata.Awordismade upofoneormorebytes.Forexample,acomputerthathas64-bitregistersand 64-bit memory addressing typically ha s 64-bit (8-byte) words.
Sentence 119: A computer executesmanyoperationsinitsnativewordsizeratherthanabyteatatime.
Sentence 120: Computer storage, along with most computer throughput, is generally measured and manipulated in bytes and collections of bytes.
Sentence 121: A kilobyte ,o r KB, is 1,024 bytes; a megabyte ,o r MB, is 1,0242bytes; a gigabyte ,o r GB,i s 1,0243bytes;a terabyte,orTB,is1,0244bytes;anda petabyte ,orPB,is1,0245 bytes.
Sentence 122: Computer manufacturers often round off these numbers and say that a megabyte is 1 million bytes and a giga byte is 1 billion bytes.
Sentence 123: Networking measurements are an exception to this general rule; they are given in bits (because networks movedata abit at atime).
Sentence 124: can be changed but cannot be changed frequently.Inaddition,itislow speed, andsoitcontainsmostlystaticprogramsanddatathataren’tfrequentlyused.
Sentence 125: For example, the iPhone uses EEPROM to store serial numbers and hardware information about thedevice.
Sentence 126: All forms of memory provide an array of bytes.
Sentence 127: Each byte has its own address.Interaction is achieved through a sequence of loadorstoreinstruc- tionstospecificmemoryaddresses.The loadinstructionmovesabyteorword from main memory to an internal register within the CPU,w h e r e a st h e store instructionmovesthecontentofaregistertomainmemory.Asidefromexplicit loadsandstores,the CPUautomaticallyloadsinstructionsfrommainmemory for executionfrom the location stored inthe programcounter.
Sentence 128: Atypicalinstruction–execution cycle, as executedon a systemwitha von Neumann architecture , first fetches an instruction from memory and stores that instruction in the instruction register .
Sentence 129: The instruction is then decoded and may cause operands to be fetched from memory and stored in some internal register.
Sentence 130: After the instruction on the operands has been executed, the result may be stored back in memory.
Sentence 131: Notice that the memory unit sees only a stream of memory addresses.
Sentence 132: It does not know how they are generated (by the instruction counter, indexing, indir ection, literal addresses, or some other means) or what they are for (instructions or data).
Sentence 133: Accordingly, we can ignore howa memory address is generated by a program.
Sentence 134: We are interested only in thesequenceof memoryaddressesgeneratedby the running program.
Sentence 135: Ideally, we want the programs and data to reside in main memory per- manently.
Sentence 136: This arrangement usually is not possible on most systems for two reasons: 1.2 Computer-System Organization 13 1.Mainmemoryisusuallytoosmalltostoreallneededprogramsanddata permanently.
Sentence 137: 2.Mainmemory,asmentioned,isvolatile—itlosesitscontentswhenpower isturnedoff orotherwiselost.
Sentence 138: Thus, most computer systems provide secondary storage as an extension of mainmemory.Themainrequirementforsecondarystorageisthatitbeableto holdlargequantitiesof datapermanently.
Sentence 139: Themostcommonsecondary-storagedevicesare hard-disk drives (HDDs) and nonvolatile memory (NVM)devices, which provide storage for both programs and data.
Sentence 140: Most programs (system and application) are stored in secondarystorageuntiltheyareloadedintomemory.Manyprogramsthenuse secondarystorage as both the source and the destination of their processing.
Sentence 141: Secondary storage is also much slower than main memory.
Sentence 142: Hence, the proper management of secondarystorage is of central importance to a computer sys- tem,as wediscussinChapter11.
Sentence 143: In a larger sense, however, the storage structure that we have described —consisting of registers, main memor y, and secondary storage—is only one of many possible storage system designs.
Sentence 144: Other possible components include cache memory, CD-ROM or blu-ray, magnetic tapes, and so on.
Sentence 145: Those that are slow enough and large enough that they are used only for special purposes —to store backup copies of material stored on other devices, for example— are called tertiary storage .
Sentence 146: Each storage system provides the basic functions of storing a datum and holding that datum until it is retrieved at a later time.
Sentence 147: Themaindifferencesamongthevariousstoragesystemslieinspeed,size,and volatility.
Sentence 148: Thewidevarietyofstoragesystemscanbeorganizedinahierarchy(Figure 1.6)according to storage capacity and access time.Asa generalrule,there isa registers cache main memory nonvolatile memory hard-disk drives magnetic tapesoptical diskstorage capacity larger smaller faster sloweraccess time - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -volatile storage nonvolatile storageprimary storage tertiary storagesecondary storage Figure 1.6 Storage-device hierarchy.
Sentence 149: 14 Chapter 1 Introduction trade-offbetweensizeandspeed,withsmallerandfastermemoryclosertothe CPU.Asshowninthefigure,inadditiontodifferinginspeedandcapacity,the various storage systems are either volatile or nonvolatile.
Sentence 150: Volatile storage, as mentionedearlier,losesitscontentswhenthepowertothedeviceisremoved, so datamustbe writtento nonvolatilestoragefor safekeeping.
Sentence 151: The top four levels of memory in the figure are constructed using semi- conductor memory ,whichconsistsofsemiconductor-basedelectroniccircuits.
Sentence 152: NVMdevices,atthefourthlevel,haveseveralvariantsbutingeneralarefaster thanharddisks.Themostcommonformof NVMdeviceisflashmemory,which is popular in mobile devices such as sma rtphones and tablets.
Sentence 153: Increasingly, flash memory is being used for long-term storage on laptops, desktops, and serversaswell.
Sentence 154: Since storage plays an important role in operating-system structure, we will refer to it frequently in the text.
Sentence 155: In general, we will use the following terminology: •Volatilestoragewillbereferredtosimplyas memory .Ifweneedtoempha- sizeaparticulartypeofstoragedevice(forexample,aregister),wewilldo so explicitly.
Sentence 156: •Nonvolatile storage retains its contents when power is lost.
Sentence 157: It will be referred to as NVS.T h ev a s tm a j o r i t yo ft h et i m ew es p e n do n NVSwill be on secondarystorage.
Sentence 158: This type of storage can be classified into two distincttypes: ◦Mechanical .Afewexamplesofsuchstoragesystemsare HDDs,optical disks,holographicstorage,andmagnetictape.Ifweneedtoemphasize a particular type of mechanical storage device (for example, magnetic tape),wewill doso explicitly.
Sentence 159: ◦Electrical .
Sentence 160: Afew examples of such storage systems are flash memory, FRAM,NRAM,a n dSSD.
Sentence 161: Electrical storage will be referred to as NVM.I f weneedtoemphasizeaparticulartypeofelectricalstoragedevice(for example, SSD), wewill doso explicitly.
Sentence 162: Mechanical storage is generally larger and less expensive per byte than electricalstorage.Conversely,electri calstorageistypicallycostly,smaller, and fasterthan mechanical storage.
Sentence 163: The design of a complete storage system must balance all the factors just discussed: it must use only as much expensive memory as necessary while providing as much inexpensive, nonvolatile storage as possible.
Sentence 164: Caches can be installed to improve performance where a large disparity in access time or transferrateexistsbetweentwo components.
Sentence 165: 1.2.3 I/O Structure Alarge portion of operating system code is dedicated to managing I/O,b o t h because of its importance to the reliability and performance of a system and because of thevaryingnature ofthe devices.
Sentence 166: Recall from the beginning of this section that a general-purpose computer systemconsists of multipledevices,allof which exchange data viaa common 1.3 Computer-System Architecture 15 thread of executioninstructions and datainstruction execution cycle data movement DMA memory interruptcache data I/O requestCPU (*N) device (*M) Figure 1.7 How a modern computer system works.
Sentence 167: bus.
Sentence 168: The form of interrupt-driven I/Odescribed in Section 1.2.1 is fine for moving small amounts of data but can produce high overhead when used for bulk data movement such as NVS I/O.
Sentence 169: To solve this problem, direct memory access(DMA) is used.
Sentence 170: After setting up buffers, pointers, and counters for the I/Odevice, the device controller transfers an entire block of data directly to or from the device and main memory, with no intervention by the CPU.O n l y oneinterruptisgeneratedperblock,totellthedevicedriverthattheoperation hascompleted,ratherthantheoneinterruptperbytegeneratedforlow-speed devices.Whilethedevicecontrollerisperformingtheseoperations,the CPUis availableto accomplish other work.
Sentence 171: Some high-end systems use switch rather than bus architecture.
Sentence 172: On these systems, multiple components can talk t o other components concurrently, rather than competing for cycles on a shared bus.
Sentence 173: In this case, DMAis even moreeffective.Figure1.7showstheinterplayofallcomponentsofacomputer system.
Sentence 174: 1.3 Computer-System Architecture In Section 1.2, we introduced the general structure of a typical computer sys- tem.
Sentence 175: A computer system can be organized in a number of different ways, which wecan categorizeroughlyaccordingtothenumberofgeneral-purpose processorsused.
Sentence 176: 1.3.1 Single-Processor Systems Many years ago, most computer systems used a single processor containing oneCPUwith a single processing core.
Sentence 177: The coreis the component that exe- cutesinstructionsandregistersforstoringdatalocally.Theonemain CPUwith its core is capable of executing a general-purpose instruction set, including instructionsfromprocesses.Thesesystemshaveotherspecial-purposeproces- 16 Chapter 1 Introduction sorsas well.Theymay come in the formof device-specificprocessors,such as disk,keyboard,and graphics controllers.
Sentence 178: All of these special-purpose processors run a limited instruction set and do not run processes.
Sentence 179: Sometimes, they are managed by the operating system, inthattheoperatingsystemsendsthemi nformationabouttheirnexttaskand monitors their status.
Sentence 180: For example, a di sk-controller microprocessor receives a sequence of requests from the main CPUcore and implements its own disk queue and scheduling algorithm.
Sentence 181: This arrangement relieves the main CPUof theoverheadofdiskscheduling.
Sentence 182: PCscontainamicroprocessorinthekeyboard to convert the keystrokes into codes to be sent to the CPU.
Sentence 183: In other systems or circumstances,special-purposeprocessorsarelow-levelcomponentsbuiltinto the hardware.
Sentence 184: The operating system cannot communicate with these proces- sors;theydotheirjobsautonomously.Theuseofspecial-purposemicroproces- sorsiscommonanddoesnotturnasingle-processorsystemintoamultiproces- sor.Ifthereisonlyonegeneral-purpose CPUwithasingleprocessingcore,then thesystemisasingle-processorsystem .Accordingtothisdefinition,however, veryfewcontemporary computersystemsaresingle-processorsystems.
Sentence 185: 1.3.2 Multiprocessor Systems On modern computers, from mobile devices to servers, multiprocessor sys- temsnow dominate the landscape of computing.
Sentence 186: Traditionally, such systems have two (or more) processors, each with a single-core CPU.T h ep r o c e s - sors share the computer bus and sometimes the clock, memory, and periph- eral devices.
Sentence 187: The primary advantage of multiprocessor systems is increased throughput.
Sentence 188: That is, by increasing the number of processors, we expect to get more work done in less time.
Sentence 189: The speed-up ratio with Nprocessors is not N, however;itislessthan N.Whenmultipleprocessorscooperateonatask,acer- tainamountofoverheadisincurredinkeepingallthepartsworkingcorrectly.
Sentence 190: This overhead,pluscontention forshar ed resources,lowers the expectedgain from additionalprocessors.
Sentence 191: The most common multiprocessor systems use symmetric multiprocess- ing(SMP), in which each peer CPUprocessor performs all tasks, including operating-system functions and user processes.
Sentence 192: Figure 1.8 illustrates a typical SMParchitecturewithtwoprocessors,eachwithitsown CPU.No tic eth a tea c h CPUprocessor has its own set of registers, as well as a private—or local— cache.
Sentence 193: However,allprocessorssharephysical memoryoverthesystembus.
Sentence 194: The benefit of this model is that many processes can run simultaneously —Nprocesses can run if there are NCPUs—without causing performance to deteriorate significantly.
Sentence 195: However, since the CPUsa r es e p a r a t e ,o n em a y be sitting idle while another is overloaded, resulting in inefficiencies.
Sentence 196: These inefficiencies can be avoided if the processors share certain data structures.
Sentence 197: A multiprocessor system of this form will allow processes and resources—such asmemory—tobeshareddynamicallyamongthevariousprocessorsandcan lower the workload variance among the processors.
Sentence 198: Such a system must be writtencarefully,aswe shallseeinChapter5and Chapter6.
Sentence 199: The definition of multiprocessor has evolved over time and now includes multicore systems,inwhichmultiplecomputingcoresresideonasinglechip.
Sentence 200: Multicore systems can be more efficient than multiple chips with single cores because on-chip communication is faster than between-chip communication.
Sentence 201: 1.3 Computer-System Architecture 17 Figure 1.8 Symmetric multiprocessing architecture.
Sentence 202: In addition, one chip with multiple cores uses significantly less power than multiple single-core chips, an important issue for mobile devices as well as laptops.
Sentence 203: InFigure1.9,weshowadual-coredesignwithtwocoresonthesamepro- cessorchip.Inthisdesign,eachcorehasitsownregisterset,aswellasitsown localcache,oftenknownasalevel1,orL1,cache.Notice,too,thatalevel2(L2) cacheislocaltothechipbutissharedbythetwoprocessingcores.Mostarchi- tecturesadopt this approach, combining local and shared caches, where local, lower-level caches are generally smaller and faster than higher-level shared Figure 1.9 A dual-core design with two cores on the same chip.
Sentence 204: 18 Chapter 1 Introduction DEFINITIONS OF COMPUTER SYSTEM COMPONENTS •CPU—Thehardwarethatexecutesinstructions.
Sentence 205: •Processor —Aphysical chipthat containsoneormore CPUs. •Core—Thebasic computationunit of the CPU.
Sentence 206: •Multicore —Including multiple computingcoresonthesame CPU.
Sentence 207: •Multiprocessor —Including multiple processors.
Sentence 208: Although virtually all systems are now multicore, we use the general term CPUwhenreferringtoasinglecomputationalunitofacomputersystemand coreas well as multicore when specifically referringto one or more cores on aCPU.
Sentence 209: caches.
Sentence 210: Aside from architectural considerations, such as cache, memory, and buscontention,amulticoreprocessorwith Ncoresappearstotheoperatingsys- temas Nstandard CPUs.Thischaracteristicputspressureonoperating-system designers—andapplicationprogrammers—tomakeefficientuseofthesepro- cessingcores,anissuewepursueinChapter4.Virtuallyallmodernoperating systems—includingWindows,mac OS, and Linux,aswellasAndroidand i OS mobilesystems—support multicore SMPsystems.
Sentence 211: Addingadditional CPUs to a multiprocessorsystemwillincreasecomput- ingpower;however,assuggestedearlier,theconceptdoesnotscaleverywell, a n do n c ew ea d dt o om a n y CPUs, contention for the system bus becomes a bottleneck and performance begins to degrade.
Sentence 212: An alternative approach is instead to provide each CPU(or group of CPUs) with its own local memory thatisaccessedviaasmall,fastlocalbus.The CPUsareconnected bya shared system interconnect ,s ot h a ta l l CPUs share one physical address space.
Sentence 213: This approach—known as non-uniform memory access ,o r NUMA—is illustrated in Figure 1.10.
Sentence 214: The advantage is that, when a CPUaccesses its local memory, not only isitfast, but thereisalso no contention overthe systeminterconnect.
Sentence 215: Thus,NUMAsystemscanscalemoreeffectivelyasmoreprocessorsareadded.
Sentence 216: Apotentialdrawbackwitha NUMAsystemisincreasedlatencywhena CPU mustaccessremotememoryacrossthesysteminterconnect,creatingapossible performancepenalty.Inotherwords,forexample, CPU0cannotaccessthelocal memoryof CPU3asquicklyasitcanaccessitsownlocalmemory,slowingdown performance.
Sentence 217: Operating systems can minimize this NUMApenalty through carefulCPUschedulingandmemorymanagement ,asdiscussedinSection5.5.2 and Section 10.5.4. Because NUMAsystems can scale to accommodate a large number of processors, they are becoming increasingly popular on servers as wellas high-performance computing systems.
Sentence 218: Finally, blade servers aresystemsinwhichmultipleprocessorboards, I/O boards, and networking boards are placed in the same chassis.
Sentence 219: The differ- ence betweenthese and traditional multiprocessorsystems is that each blade- processorboardbootsindependentlyandrunsitsownoperatingsystem.Some blade-serverboards aremultiprocessoras well,which blurs thelines between 1.3 Computer-System Architecture 19 CPU0memory0 CPU2CPU3CPU1memory1 memory2memory3interconnect Figure 1.10 NUMA multiprocessing architecture.
Sentence 220: types of computers.
Sentence 221: In essence, these servers consist of multiple independent multiprocessorsystems.
Sentence 222: 1.3.3 Clustered Systems Another type of multiprocessor system is a clustered system ,w h i c hg a t h - ers together multiple CPUs. Clustered systems differ from the multiprocessor systems described in Section 1.3.2 in that they are composed of two or more individualsystems—ornodes—joinedto gether;eachnodeistypicallyamul- ticore system.
Sentence 223: Such systems are considered loosely coupled .W es h o u l dn o t e that the definition of clustered is not concrete; many commercial and open- source packages wrestle to define what a clustered system is and why one form is betterthan another.
Sentence 224: The generallyaccepted definition is that clustered computers share storage and are closely linked via a local-area network LAN (asdescribedin Chapter19) or afasterinterconnect, such asInfiniBand.
Sentence 225: Clustering is usually used to provide high-availability service —that is, service that will continue even if one or more systems in the cluster fail.
Sentence 226: Generally, we obtain high availability by adding a level of redundancy in the system.
Sentence 227: A layer of cluster software runs on the cluster nodes.
Sentence 228: Each node can monitoroneormoreoftheothers(overth enetwork).Ifthemonitoredmachine fails,themonitoringmachine cantakeownershipofitsstorageandrestartthe applicationsthatwererunning on the failedmachine.
Sentence 229: The usersand clientsof theapplications seeonly a briefinterruptionofservice.
Sentence 230: High availability provides increased reliability, which is crucial in many applications.Theabilitytocontinueprovidingserviceproportionaltothelevel ofsurvivinghardwareiscalled graceful degradation .Somesystemsgobeyond graceful degradation and are called fault tolerant , because they can suffer a failure of any single component and still continue operation.
Sentence 231: Fault tolerance requires a mechanism to allow the failure to be detected, diagnosed, and, if possible,corrected.
Sentence 232: Clustering can be structured asymmetrically or symmetrically.
Sentence 233: In asym- metric clustering ,onemachineisin hot-standby mode whiletheotherisrun- ningtheapplications.Thehot-standbyhostmachinedoesnothingbutmonitor the active server.
Sentence 234: If that server fails, the hot-standby host becomes the active 20 Chapter 1 Introduction PC MOTHERBOARD Considerthedesktop PCmotherboardwithaprocessorsocketshownbelow: This board is a fully functioning computer, once its slots are populated.
Sentence 235: It consists of a processor socket containing a CPU,DRAMsockets, PCIeb u s slots, and I/Oconnectors of various types.
Sentence 236: Ev en the lowest-cost general- purpose CPUcontains multiple cores.
Sentence 237: Some motherboards contain multiple processor sockets.
Sentence 238: More advanced computers allow more than one system board,creating NUMAsystems.
Sentence 239: server.
Sentence 240: In symmetric clustering , two or more hosts are running applications and are monitoring each other.
Sentence 241: This structure is obviously more efficient, as it usesalloftheavailablehardware.However,itdoesrequirethatmorethanone application beavailableto run.
Sentence 242: Since a cluster consists of several computer systems connected via a net- work,clusterscanalsobeusedtoprovide high-performance computing envi- ronments.Suchsystemscansupplysignificantlygreatercomputationalpower thansingle-processororeven SMPsystemsbecausetheycanrunanapplication concurrently on all computers in the cluster.
Sentence 243: The application must have been written specifically to take advantage of the cluster, however.
Sentence 244: This involves a technique known as parallelization , which divides a program into separate components that runinparallelonindividualcoresina computerorcomput- ers in a cluster.
Sentence 245: Typically, these applications are designed so that once each computingnodeintheclusterhassolveditsportionoftheproblem,theresults from allthe nodesare combined into a final solution.
Sentence 246: Other forms of clusters include para llel clusters and clustering over a wide-areanetwork ( WAN) (as describedin Chapter 19).
Sentence 247: Parallel clustersallow multiple hosts to access the same data on shared storage.
Sentence 248: Because most oper- 1.4 Operating-System Operations 21 computerinterconnectcomputerinterconnectcomputer storage-area network Figure 1.11 General structure of a clustered system.
Sentence 249: ating systems lack support for simultaneous data access by multiple hosts, parallel clusters usually require the use of special versions of software and special releases of applications.
Sentence 250: For ex ample, Oracle Real Application Cluster is a version of Oracle’s database that has been designed to run on a parallel cluster.
Sentence 251: Each machine runs Oracle, and a layer of software tracks access to the shareddisk.Eachmachinehasfullaccesstoalldatainthedatabase.Toprovide this shared access, the system must also supply access control and locking to ensure that no conflicting operations occur.
Sentence 252: This function, commonly known asa distributed lock manager (DLM), isincludedinsome clustertechnology.
Sentence 253: Cluster technology is changing rapidly.
Sentence 254: Some cluster products support thousandsofsystemsinacluster,aswellasclusterednodesthatareseparated by miles.
Sentence 255: Many of these improvements are made possible by storage-area networks (SANs), as described in Section 11.7.4, which allow many systems to attach to a pool of storage.
Sentence 256: If the applications and their data are stored on theSAN, then the cluster software can assign the application to run on any host that is attached to the SAN.
Sentence 257: If the host fails, then any other host can take over.Inadatabasecluster,dozensofhostscansharethesamedatabase,greatly increasingperformanceandreliability.Fi gure1.11depictsthegeneralstructure ofa clusteredsystem.
Sentence 258: 1.4 Operating-System Operations Nowthatwehavediscussedbasicinformationaboutcomputer-systemorgani- zationandarchitecture,wearereadytotalkaboutoperatingsystems.Anoper- ating system provides the environment within which programs are executed.
Sentence 259: Internally,operatingsystemsvarygreat ly,sincetheyareorganizedalongmany differentlines.Thereare,however,manycommonalities,whichweconsiderin thissection.
Sentence 260: For a computer to start running—for instance, when it is powered up or rebooted—it needs to have an initial program to run.
Sentence 261: As noted earlier, this initial program, or bootstrap program, tends to be simple.
Sentence 262: Typically, it is stored within the computer hardware in firmware.
Sentence 263: It initializes all aspects of the system, from CPUregisters to device controllers to memory contents.
Sentence 264: The bootstrap program must know how to load the operating system and how to 22 Chapter 1 Introduction HADOOP Hadoop is an open-source software framework that is used for distributed processing of large data sets (known as big data) in a clustered system con- tainingsimple,low-costhardwareco mponents.Hadoopisdesignedtoscale from a single system to a cluster containing thousands of computing nodes.
Sentence 265: Tasksareassignedtoanodeintheclus ter,andHadooparrangescommunica- tionbetweennodestomanageparallelc omputationstoprocessandcoalesce results.
Sentence 266: Hadoop also detects and manages failures in nodes, providing an efficientand highly reliabledistributed computingservice.
Sentence 267: Hadoopis organizedaroundthefollowing threecomponents: 1.Adistributedfilesystemthatmanagesdataandfilesacrossdistributedcom- puting nodes.
Sentence 268: 2.TheYARN(“YetAnotherResourceNegotiator ”)framework,whichmanages resources within the cluster as well as scheduling tasks on nodes in the cluster.
Sentence 269: 3.The MapReduce system, which allows parallel processing of data across nodesin thecluster.
Sentence 270: Hadoop is designed to run on Linux systems, and Hadoop applications can be written using several programming languages, including scripting languages such as PHP, Perl, and Python.
Sentence 271: Java is a popular choice for developing Hadoop applications, as Hadoop has several Java libraries that support MapReduce.
Sentence 272: More information on MapReduce and Hadoop can be found at https://hadoop.apache.org/docs/r1.2.1/mapred  tutorial.html andhttps://hadoop.apache.org start executing that system.
Sentence 273: To accomplish this goal, the bootstrap program mustlocate theoperating-systemkerneland loaditinto memory.
Sentence 274: Once the kernel is loaded and executing, it can start providing services to the system and its users.
Sentence 275: Some services are provided outside of the kernel by system programs that are loadedinto memory at boot time to become system daemons , which run the entire time the kernel is running.
Sentence 276: On Linux, the first system program is “systemd ,”and it starts many other daemons.
Sentence 277: Once this phase is complete, the system is fully booted, and the system waits for some eventtooccur.
Sentence 278: Iftherearenoprocessestoexecute,no I/Odevicestoservice,andnousers towhomtorespond,anoperatingsystemwillsitquietly,waitingforsomething tohappen.Eventsarealmostalwayssignaledbytheoccurrenceofaninterrupt.
Sentence 279: InSection1.2.1wedescribedhardwareinterrupts.Anotherformofinterruptis atrap(oran exception ),whichisasoftware-generatedinterruptcausedeither by an error (for example, division by zero or invalid memory access) or by a specific request from a user program that an operating-system service be performedby executinga specialoperationcalleda system call .
Sentence 280: 1.4 Operating-System Operations 23 1.4.1 Multiprogramming and Multitasking One of the most important aspects of operating systems is the ability to run multipleprograms,asasingleprogramcannot,ingeneral,keepeitherthe CPU or theI/Odevices busy at all times.
Sentence 281: Furthermore, users typically wantto run more than one program at a time as well.
Sentence 282: Multiprogramming increases CPU utilization, as well as keeping users satisfied, by organizing programs so that theCPUalways has one to execute.In a multiprogrammedsystem,a program inexecutionistermeda process.
Sentence 283: The idea is as follows: The operating system keeps several processes in memorysimultaneously (Figure1.12).
Sentence 284: The operating systempicks and begins toexecuteoneoftheseprocesses.Eventually,theprocessmayhavetowaitfor some task, such as an I/Ooperation, to complete.
Sentence 285: In a non-multiprogrammed system, the CPUwould sit idle.
Sentence 286: In a multiprogrammed system, the operating system simply switches to, and ex ecutes, another process.
Sentence 287: When thatprocess needs to wait, the CPUswitches to anotherprocess, and so on.
Sentence 288: Eventually,the first process finishes waiting and gets the CPUback.
Sentence 289: As long as at least one processneedsto execute,the CPUis neveridle.
Sentence 290: This idea is common in other life situations.
Sentence 291: A lawyer does not work for only one client at a time, for example.
Sentence 292: While one case is waiting to go to trial orhavepaperstyped,thelawyercan workon another case.Ifshehasenough clients, the lawyer will never be idle for lack of work.
Sentence 293: (Idle lawyers tend to becomepoliticians,so thereis acertainsocial valueinkeepinglawyersbusy.) Multitasking isalogicalextensionofmultiprogramming.Inmultitasking systems, the CPUexecutes multiple processes by switching among them, but the switches occur frequently, providing the user with a fast response time .
Sentence 294: Consider that when a process executes, it typically executes for only a short time before it either finishes or needs to perform I/O.I/Omay be interactive; that is, output goes to a display for the user, and input comes from a user keyboard,mouse,ortouchscreen.Sinceinteractive I/Otypicallyrunsat “peo- ple speeds, ”it may take a long time to complete.
Sentence 295: Input, for example, may be process 1 0max operating system process 2 process 3 process 4 Figure 1.12 Memory layout for a multiprogramming system.
Sentence 296: 24 Chapter 1 Introduction bounded by the user’s typing speed; seven characters per second is fast for people but incredibly slow for computers.
Sentence 297: Rather than let the CPUsit idle as thisinteractiveinput takesplace,theoperatingsystemwillrapidlyswitchthe CPUto another process.
Sentence 298: Havingseveralprocessesinmemoryatthe sametimerequiressomeform of memory management, which we cover in Chapter 9 and Chapter 10.
Sentence 299: In addition,ifseveralprocessesarereadytorunatthesametime,thesystemmust choose which process will run next.
Sentence 300: Making this decision is CPU scheduling , which is discussed in Chapter 5.
Sentence 301: Finally, running multiple processes concur- rentlyrequiresthattheirabilitytoaffectoneanotherbelimitedinallphasesof theoperatingsystem,includingprocessscheduling,diskstorage,andmemory management.We discussthese considerationsthroughout the text.
Sentence 302: In a multitasking system, the operating system must ensure reasonable response time.
Sentence 303: A common method for doing so is virtual memory ,at e c h - nique that allows the execution of a process that is not completely in memory (Chapter 10).
Sentence 304: The main advantage of this scheme is that it enables users to runprogramsthatarelargerthanactual physical memory .Further,itabstracts main memory into a large, uniform array of storage, separating logical mem- oryas viewed by the user from physical memory.
Sentence 305: This arrangement frees programmersfromconcern overmemory-storagelimitations.
Sentence 306: Multiprogrammingandmultitaskingsystemsmustalsoprovideafilesys- tem (Chapter 13, Chapter 14, and Chapter 15).
Sentence 307: The file system resides on a secondarystorage;hence,storagemana gementmustbeprovided(Chapter11).
Sentence 308: In addition, a system must protect resources from inappropriate use (Chapter 17).Toensureorderlyexecution,thesystemmustalsoprovidemechanismsfor processsynchronizationandcommunication(Chapter6andChapter7),andit may ensure that processes do not get stuck in a deadlock, forever waiting for one another (Chapter8).
Sentence 309: 1.4.2 Dual-Mode and Multimode Operation Since the operating system and its users share the hardware and software resourcesofthecomputersystem,aproperlydesignedoperatingsystemmust ensure that an incorrect (or malicious) program cannot cause other programs —or the operating system itself—to execute incorrectly.
Sentence 310: In order to ensure the proper execution of the system, we must be able to distinguish between the execution of operating-system code and user-defined code.
Sentence 311: The approach taken by most computer systems is to provide hardware support that allows differentiationamong various modesof execution.
Sentence 312: At the very least, we need two separate modesof operation: user mode and kernel mode (also called supervisor mode ,system mode ,o rprivileged mode).
Sentence 313: A bit, called the mode bit , is added to the hardware of the computer to indicate the current mode: kernel (0) or user (1).
Sentence 314: With the mode bit, we can distinguish between a task that is executed on behalf of the operating system and one that is executed on behalf of the user.
Sentence 315: When the computer system is executingonbehalfofauserapplicat ion,thesystemisinusermode.However, when a user application requests a service from the operating system (via a system call), the system must transition from user to kernel mode to fulfill 1.4 Operating-System Operations 25 user process executinguser process kernelcalls system call return from system calluser mode (mode bit = 1) trap mode bit = 0return mode bit = 1kernel mode (mode bit = 0)execute system call Figure 1.13 Transition from user to kernel mode.
Sentence 316: the request.
Sentence 317: This is shown in Figure 1.13.
Sentence 318: As we shall see, this architectural enhancement isusefulfor many other aspectsof systemoperationaswell.
Sentence 319: At system boot time, the hardware starts in kernel mode.
Sentence 320: The operating system is then loaded and starts user a pplications in user mode.
Sentence 321: Whenever a traporinterruptoccurs,thehardwareswitchesfromusermodetokernelmode (that is, changes the state of the mode bit to 0).
Sentence 322: Thus, whenever the operating system gains control of the computer, it is in kernel mode.
Sentence 323: The system always switches to user mode (by setting the mode bit to 1) before passing control to auserprogram.
Sentence 324: Thedualmodeofoperationprovidesuswiththemeansforprotectingthe operating system from errant users—and errant users from one another.
Sentence 325: We accomplish this protection by designating some of the machine instructions that may cause harm as privileged instructions .
Sentence 326: The hardware allows privi- legedinstructionstobeexecutedonlyinkernelmode.Ifanattemptismadeto execute a privileged instruction in user mode, the hardware does not execute theinstructionbutrathertreatsitasillegalandtrapsittotheoperatingsystem.
Sentence 327: The instruction to switch to kernel mode is an example of a privileged instruction.Someotherexamplesinclude I/Ocontrol,timermanagement,and interruptmanagement.Manyadditional privilegedinstructionsarediscussed throughout the text.
Sentence 328: The concept of modes can be extended beyond two modes.
Sentence 329: For example, Intel processors have four separate protection rings , where ring 0 is kernel modeandring3isusermode.(Althoughrings1and2couldbeusedforvari- ousoperating-systemservices,inpracticetheyarerarelyused.) ARMv8systems have seven modes.
Sentence 330: CPUs that support virtualization (Section 18.1) frequently haveaseparatemodetoindicatewhenthe virtual machine manager (VMM)is in control of the system.
Sentence 331: In this mode, the VMMhas more privileges than user processes but fewer than the kernel.
Sentence 332: It needs that level of privilege so it can createand manage virtualmachines, changing the CPUstate todo so.
Sentence 333: We can now better understand the life cycle of instruction execution in a computersystem.Initialcontrolresidesintheoperatingsystem,whereinstruc- tions are executed in kernel mode.
Sentence 334: When control is given to a user applica- tion, the mode is set to user mode.
Sentence 335: Eventually, control is switched back to the operating system via an interrupt, a trap, or a system call.
Sentence 336: Most contem- porary operating systems—such as Microsoft Windows, Unix, and Linux— 26 Chapter 1 Introduction take advantage of this dual-mode feature and provide greater protection for theoperating system.
Sentence 337: System calls provide the means for a user program to ask the operating system to perform tasks reserved for the operating system on the user pro- gram’s behalf.
Sentence 338: A system call is invoked in a variety of ways, depending on the functionality provided by the underlying processor.
Sentence 339: In all forms, it is the methodusedbyaprocesstorequestactionbytheoperatingsystem.Asystem callusuallytakestheformofatraptoaspecificlocationintheinterruptvector.
Sentence 340: Thistrapcanbeexecutedbyageneric trapinstruction,althoughsomesystems have a specific syscall instructiontoinvokea systemcall.
Sentence 341: When a system call is executed, it is typically treated by the hardware as a software interrupt.
Sentence 342: Control passes through the interrupt vector to a service routine in the operating system, and the mode bit is set to kernel mode.
Sentence 343: The system-callserviceroutineisa partof theoperatingsystem.Thekernelexam- ines the interrupting instruction to determine what system call has occurred; a parameter indicates what type of service the user program is requesting.
Sentence 344: Additional information needed for the request may be passed in registers, on thestack,or inmemory(withpointerstothememorylocations passedinreg- isters).
Sentence 345: The kernel verifies that the parameters are correct and legal, executes therequest,andreturnscontroltotheinstructionfollowingthesystemcall.We describesystemcalls morefullyinSection2.3. Once hardware protection is in place, it detects errors that violate modes.
Sentence 346: Theseerrorsarenormally handledby theoperatingsystem.Ifa userprogram fails in some way—such as by making an attempt either to execute an illegal instruction or to access memory that is not in the user’s address space—then thehardwaretrapstotheoperatingsystem.Thetraptransferscontrolthrough the interrupt vector to the operating system, just as an interrupt does.
Sentence 347: When a program error occurs, the operating system must terminate the program abnormally.
Sentence 348: This situation is handled by the same code as a user-requested abnormaltermination.Anappropriateerrormessageisgiven,andthememory oftheprogrammaybedumped.Thememorydumpisusuallywrittentoafile sothattheuserorprogrammercanexamineitandperhapscorrectitandrestart the program.
Sentence 349: 1.4.3 Timer We must ensure that the operating system maintains control over the CPU.
Sentence 350: We cannot allow a user program to get stuck in an infinite loop or to fail to call system services and never return control to the operating system.
Sentence 351: To accomplish this goal, we can use a timer.At i m e rc a nb es e tt oi n t e r r u p t the computer after a specified period.
Sentence 352: The period may be fixed (for example, 1/60 second) or variable (for example, from 1 millisecond to 1 second).
Sentence 353: A variable timer is generally implemented by a fixed-rate clock and a counter.
Sentence 354: The operating system sets the counter.
Sentence 355: Every time the clock ticks, the counter isdecremented.Whenthecounterreaches0,aninterruptoccurs.Forinstance, a 10-bit counter with a 1-millisecond clock allows interrupts at intervals from 1 millisecondto 1,024 milliseconds,instepsof 1 millisecond.
Sentence 356: Before turning over control to the user, the operating system ensures that the timer is set to interrupt.If the timer interrupts,control transfers automati- cally to the operating system, which may treat the interrupt as a fatal error or 1.5 Resource Management 27 LINUX TIMERS OnLinuxsystems,thekernel configurationparameter HZspecifiesthefre- quencyoftimerinterrupts.An HZvalueof250meansthatthetimergenerates 250 interrupts per second, or one inter rupt every 4 milliseconds.
Sentence 357: The value ofHZdepends upon how the kernel is configured, as well the machine type andarchitectureonwhichitisrunning.Arelatedkernelvariableis jiffies , which representthe numberof timer interrupts that haveoccurredsince the system was booted.
Sentence 358: A programming project in Chapter 2 further explores timing intheLinux kernel.
Sentence 359: maygivetheprogrammoretime.Clearly,instructionsthatmodifythecontent ofthe timerareprivileged.
Sentence 360: 1.5 Resource Management Aswehaveseen,anoperatingsystemisa resource manager .Thesystem’s CPU, memoryspace,file-storagespace,and I/Odevicesareamongtheresourcesthat theoperatingsystemmustmanage.
Sentence 361: 1.5.1 Process Management A program can do nothing unless its instructions are executed by a CPU.A programinexecution,asmentioned,isaprocess.Aprogramsuchasacompiler is a process, and a word-processing program being run by an individual user on aPCis a process.
Sentence 362: Similarly, a social media app on a mobile device is a process.Fornow,youcanconsideraprocesstobeaninstanceofaprogramin execution,butlateryouwillseethattheconceptismoregeneral.Asdescribed inChapter3,itispossibletoprovidesystemcallsthatallowprocessestocreate subprocessestoexecute concurrently.
Sentence 363: Aprocessneedscertainresources—including CPUtime,memory,files,and I/Odevices—to accomplish itstask.
Sentence 364: Theseresources aretypically allocatedto the process while it is running.
Sentence 365: In addition to the various physical and logical resources that a process obtains when it is created, various initialization data (input) may be passed along.
Sentence 366: For example, consider a process running a web browser whose function is to display the contents of a web page on a screen.
Sentence 367: Theprocesswillbegiventhe URLasaninputandwillexecutetheappropriate instructionsandsystemcallstoobtainan ddisplaythedesiredinformationon thescreen.Whentheprocessterminates,theoperatingsystemwillreclaimany reusable resources.
Sentence 368: We emphasize that a program by itself is not a process.
Sentence 369: A program is a passiveentity,likethecontentsofafilestoredondisk,whereasaprocessisan activeentity.
Sentence 370: A single-threaded process has one program counter specifying the next instruction to execute.
Sentence 371: (Threads are covered in Chapter 4.) The exe- cution of such a process must be sequential.The CPUexecutes one instruction of the process after another, until the process completes.
Sentence 372: Further, at any time, one instruction at most is executed on behalf of the process.
Sentence 373: Thus, although 28 Chapter 1 Introduction twoprocessesmaybeassociatedwiththesameprogram,theyarenevertheless considered two separate execution sequences.
Sentence 374: A multithreaded process has multiple program counters, each pointing to the next instruction to execute for a giventhread.
Sentence 375: A process is the unit of work in a system.
Sentence 376: A system consists of a collec- tion of processes, some of which are operating-system processes (those that execute system code) and the rest of which are user processes (those that exe- cute user code).
Sentence 377: All these processes can potentially execute concurrently—by multiplexingona single CPUcore—or in parallelacross multiple CPUcores.
Sentence 378: The operating system is responsible for the following activities in connec- tionwithprocessmanagement: •Creatingand deletingboth userandsystemprocesses •Schedulingprocessesand threadson the CPUs •Suspendingand resumingprocesses •Providingmechanisms forprocesssynchronization •Providingmechanisms forprocesscommunication We discuss process-managementtechniquesin Chapter3through Chapter7.
Sentence 379: 1.5.2 Memory Management AsdiscussedinSection1.2.2,themainmemoryiscentraltotheoperationofa modern computer system.
Sentence 380: Main memory is a large array of bytes, ranging in size from hundreds of thousands to billions.
Sentence 381: Each byte has its own address.
Sentence 382: Main memory is a repository of quickly accessible data shared by the CPU andI/Odevices.
Sentence 383: The CPUreads instructions from main memory during the instruction-fetch cycle and both reads and writes data from main memory duringthedata-fetchcycle(onavonNeumannarchitecture).Asnotedearlier, themainmemoryisgenerallytheonlylargestoragedevicethatthe CPUisable to address and access directly.
Sentence 384: For example, for the CPUto process data from disk, those data must first be transferred to main memory by CPU-generated I/Ocalls.
Sentence 385: In the same way, instructions must be in memory for the CPUto executethem.
Sentence 386: Foraprogramtobeexecuted,itmustbemappedtoabsoluteaddressesand loadedintomemory.Astheprogramexecutes,itaccessesprograminstructions and data from memory by generating these absolute addresses.
Sentence 387: Eventually, the program terminates, its memory space is declared available, and the next programcan beloadedandexecuted.
Sentence 388: Toimproveboththeutilizationofthe CPUandthespeedofthecomputer’s responsetoitsusers,general-purposecomputersmustkeepseveralprograms inmemory,creatinganeedformemorymanagement.Manydifferentmemory- managementschemesareused.Theseschemesreflectvariousapproaches,and theeffectivenessofanygivenalgorithmdependsonthesituation.Inselectinga memory-managementschemeforaspecificsystem,wemusttakeintoaccount many factors—especially the hardware design of the system.
Sentence 389: Each algorithm requires its own hardware support.
Sentence 390: 1.5 Resource Management 29 The operating system is responsible for the following activities in connec- tionwithmemorymanagement: •Keeping track of which parts of memory are currently being used and which process isusing them •Allocating and deallocatingmemoryspaceas needed •Deciding which processes (or parts of processes) and data to move into and out of memory Memory-managementtechniquesarediscussedinChapter9and Chapter10.
Sentence 391: 1.5.3 File-System Management To make the computer system convenient for users, the operating system providesauniform,logicalviewofinformationstorage.Theoperatingsystem abstracts from the physical properties of its storage devices to define a logical storageunit,the fil.Theoperatingsystemmapsfilesontophysicalmediaand accessesthesefilesviathestoragedevices.
Sentence 392: File management is one of the most visible components of an operating system.
Sentence 393: Computers can store information on several different types of physi- cal media.
Sentence 394: Secondary storage is the most common, but tertiary storage is also possible.
Sentence 395: Each of these media has its own characteristics and physical orga- nization.
Sentence 396: Most are controlled by a device, such as a disk drive, that also has itsownuniquecharacteristics.Thesepro pertiesincludeaccessspeed,capacity, data-transferrate,and access method(sequentialor random).
Sentence 397: A file is a collection of related information defined by its creator.
Sentence 398: Com- monly,filesrepresentprograms(bothsourceandobjectforms)anddata.Data files may be numeric, alphabetic, alphanumeric, or binary.
Sentence 399: Files may be free- form (for example, text files), or they may be formatted rigidly (for example, fixed fields such as an mp3 music file).
Sentence 400: Clearly, the concept of a file is an extremelygeneralone.
Sentence 401: The operatingsystem implementsthe abstract concept of a file by manag- ingmassstoragemediaandthedevicesthatcontrolthem.Inaddition,filesare normally organized into directories to make them easier to use.
Sentence 402: Finally, when multiple users have access to files, it may be desirable to control which user may access a file and how that user may access it (for example, read, write, append).
Sentence 403: The operating system is responsible for the following activities in connec- tionwith file management: •Creatingand deletingfiles •Creatingand deletingdirectoriesto organizefiles •Supportingprimitivesfor manipulating filesand directories •Mapping filesonto mass storage •Backing up filesonstable(nonvolatile) storagemedia 30 Chapter 1 Introduction File-management techniques are discussed in Chapter 13, Chapter 14, and Chapter15.
Sentence 404: 1.5.4 Mass-Storage Management Aswehavealreadyseen,thecomputersystemmustprovidesecondarystorage tobackupmainmemory.Mostmoderncomputersystemsuse HDDsandNVM devices as the principal on-line storage media for both programs and data.
Sentence 405: Most programs—including compilers, web browsers, word processors, and games—are stored on these devices until loaded into memory.
Sentence 406: The programs thenusethedevicesasboththesourceandthedestinationoftheirprocessing.
Sentence 407: Hence, the proper management of secondary storage is of central importance to a computer system.
Sentence 408: The operating system is responsible for the following activitiesinconnection withsecondary storagemanagement: •Mounting and unmounting •Free-spacemanagement •Storageallocation •Diskscheduling •Partitioning •Protection Becausesecondarystorageisusedfrequentlyand extensively,itmustbe used efficiently.Theentirespeedofoperationofacomputermayhingeonthespeeds of the secondary storage subsystem and t he algorithms that manipulate that subsystem.
Sentence 409: Atthesametime,therearemanyusesforstoragethatisslowerandlower in cost (and sometimes higher in capac ity) than secondary storage.
Sentence 410: Backups of disk data, storage of seldom-used data, and long-term archival storage are someexamples.Magnetictapedrivesandtheirtapesand CD DVD andBlu-ray drivesandplattersaretypicaltertiarystoragedevices.
Sentence 411: Tertiary storage is not crucial to system performance, but it still must be managed.
Sentence 412: Some operating systems take on this task, while others leave tertiary-storage management to application programs.
Sentence 413: Some of the functions thatoperatingsystemscanprovideincludemountingandunmountingmedia in devices, allocating and freeing the devices for exclusive use by processes, and migratingdatafrom secondaryto tertiarystorage.
Sentence 414: Techniques for secondary storage and tertiary storage management are discussedinChapter11.
Sentence 415: 1.5.5 Cache Management Caching is an important principle of computer systems.
Sentence 416: Here’s how it works.
Sentence 417: Information is normally kept in some storage system (such as main memory).
Sentence 418: As it is used, it is copied into a faster storage system—the cache—on a tem- porary basis.
Sentence 419: When we need a particular piece of information, we first check whetheritisinthecache.Ifitis,weusetheinformationdirectlyfromthecache.
Sentence 420: 1.5 Resource Management 31 Level Name Typical size Implementation technology Access time (ns) Bandwidth (MB/sec) Managed by Backed by1 registers < 1 KB custom memory with multiple ports CMOS 0.25-0.5 20,000-100,000 compiler cache2 cache < 16MB on-chip or off-chip CMOS SRAM 0.5-25 5,000-10,000 hardware main memory3 main memory < 64GB CMOS SRAM 80-250 1,000-5,000 operating system disk4 solid-state disk < 1 TB flash memory 25,000-50,000 500 operating system disk5 magnetic disk < 10 TB magnetic disk 5,000,000 20-150 operating system disk or tape Figure 1.14 Characteristics of various types of storage.
Sentence 421: Ifitisnot,weusetheinformationfromthesource,puttingacopyinthecache undertheassumption that wewillneeditagain soon.
Sentence 422: In addition, internal programmable registers provide a high-speed cache for main memory.
Sentence 423: The programmer (or compiler) implements the register- allocationandregister-replacementalgorithmstodecidewhichinformationto keepinregistersand which to keepinmainmemory.
Sentence 424: Other caches are implemented totally in hardware.
Sentence 425: For instance, most systems have an instruction cache to hold the instructions expected to be executed next.
Sentence 426: Without this cache, the CPUwould have to wait several cycles whileaninstructionwasfetchedfrommainmemory.Forsimilarreasons,most systemshaveoneormorehigh-speeddatacachesinthememoryhierarchy.We are not concerned with these hardware-only caches in this text, since they are outsidethe control ofthe operatingsystem.
Sentence 427: Because caches have limited size, cache management is an important designproblem.Carefulselectionofth ecachesizeandofareplacementpolicy canresultingreatlyincreasedperformance,asyoucanseebyexaminingFigure 1.14.
Sentence 428: Replacement algorithms for softwa re-controlled caches are discussed in Chapter10.
Sentence 429: Themovementofinformationbetweenlevelsofastoragehierarchymaybe either explicit or implicit, depending o nt h eh a r d w a r ed e s i g na n dt h ec o n t r o l - ling operating-system software.
Sentence 430: For instance, data transfer from cache to CPU and registers is usually a hardware function, with no operating-system inter- vention.Incontrast,transferofdatafromdisktomemoryisusuallycontrolled by theoperatingsystem.
Sentence 431: In a hierarchical storage structure, the same data may appear in different levels of the storage system.
Sentence 432: For example, suppose that an integer A that is to be incremented by 1 is located in file B, and file B resides on hard disk.
Sentence 433: Theincrementoperationproceedsbyfirstissuingan I/Ooperationtocopythe disk block on which Aresidesto main memory.
Sentence 434: This operation is followed by copyingAtothecache andtoaninternalregister.Thus,thecopyofAappears in several places: on the hard disk, in main memory, in the cache, and in an internalregister(seeFigure1.15).Oncet heincrementtakesplaceintheinternal register, the value of Adiffers in the various storage systems.
Sentence 435: The value of A 32 Chapter 1 Introduction A A Amagnetic diskmain memoryhardware registercache Figure 1.15 Migration of integer A from disk to register.
Sentence 436: becomes the same only after the new value of A is written from the internal registerback to thehard disk.
Sentence 437: In a computing environment where only one process executes at a time, thisarrangementposesno difficulties,sinceanaccesstointegerAwillalways betothecopyatthehighestlevelofthehierarchy.However,inamultitasking environment, where the CPUis switched back and forth among various pro- cesses, extreme care must be taken to ensure that, if several processes wish to access A, then each of these processes will obtain the most recently updated valueof A.
Sentence 438: Thesituationbecomesmorecomplicatedinamultiprocessorenvironment where, in addition to maintaining internal registers, each of the CPUsa l s o containsalocalcache(referbacktoFigure1.8).Insuchanenvironment,acopy of A may exist simultaneously in several caches.
Sentence 439: Since the various CPUsc a n all execute in parallel, we must make sure that an update to the value of A in one cache is immediatelyreflectedin all other caches where Aresides.This situationiscalled cache coherency ,anditisusuallyahardwareissue(handled belowtheoperating-systemlevel).
Sentence 440: In a distributed environment, the situation becomes even more complex.
Sentence 441: Inthisenvironment,severalcopies(orreplicas)ofthesamefilecanbekepton different computers.
Sentence 442: Since the various replicas may be accessed and updated concurrently,somedistributedsystemsensurethat,whenareplicaisupdated inoneplace,allotherreplicasarebroughtuptodateassoonaspossible.There arevariousways to achievethisguarantee,as wediscussinChapter19.
Sentence 443: 1.5.6 I/O System Management One of the purposes of an operating system is to hide the peculiarities of specifichardwaredevicesfromtheuser.Forexample,in UNIX,thepeculiarities ofI/Odevices are hidden from the bulk of the operating system itself by the I/Osubsystem .Th eI/Osubsystemconsists ofseveralcomponents: •Amemory-managementcomponentthatincludesbuffering, caching, and spooling •Ageneraldevice-driverinterface •Driversforspecifichardware devices Only the device driver knows the peculiarities of the specific device to which itisassigned.
Sentence 444: We discussed earlier in this chapter how interrupt handlers and device driversareusedintheconstructionofefficient I/Osubsystems.InChapter12, wediscusshowthe I/Osubsysteminterfacestoth eothersystemcomponents, manages devices,transfersdata,and detects I/Ocompletion.
Sentence 445: 1.6 Security and Protection 33 1.6 Security and Protection If a computer system has multiple users and allows the concurrent execution ofmultipleprocesses,thenaccesstodatamustberegulated.Forthatpurpose, mechanismsensurethatfiles,memorysegments, CPU,andotherresourcescan be operated on by only those processe s that have gained proper authoriza- tion from the operating system.
Sentence 446: For example, memory-addressing hardware ensures that a process can execute only within its own address space.
Sentence 447: The timer ensures that no process can gain control of the CPUwithout eventually relinquishingcontrol.Device-controlregistersarenotaccessibletousers,sothe integrityof thevariousperipheraldevicesisprotected.
Sentence 448: Protection , then, is any mechanism for controlling the access of processes oruserstotheresourcesdefinedbyacomputersystem.Thismechanismmust providemeanstospecifythecontrolstobeimposedandtoenforcethecontrols.
Sentence 449: Protectioncanimprovereliabilitybydetectinglatenterrorsattheinterfaces between component subsystems.
Sentence 450: Early det ection of interface errors can often prevent contamination of a healthy subsystem by another subsystem that is malfunctioning.
Sentence 451: Furthermore, an unprotected resource cannot defend against use(ormisuse)byanunauthorizedorincompetentuser.Aprotection-oriented systemprovidesameanstodistinguishb etweenauthorizedandunauthorized usage,as we discussin Chapter17.
Sentence 452: A system can have adequate protection but still be prone to failure and allowinappropriateaccess.Considerauserwhoseauthenticationinformation (her means of identifying herself to the system) is stolen.
Sentence 453: Her data could be copied or deleted, even though file and memory protection are working.
Sentence 454: It is thejobof security todefendasystemfromexternalandinternalattacks.Such attacks spread across a huge range and include virusesand worms, denial-of- service attacks (which use all of a system’s resources and so keep legitimate users out of the system), identity theft, and theft of service (unauthorized use of a system).
Sentence 455: Prevention of some of these attacks is considered an operating- system function on some systems, while other systems leave it to policy or additional software.
Sentence 456: Due to the alarming r ise in security incidents, operating- system security features are a fast-growing area of research and implementa- tion.Wediscuss securityinChapter16.
Sentence 457: Protectionandsecurityrequirethesystemtobeabletodistinguishamong all its users.
Sentence 458: Most operating systems maintain a list of user names and asso- ciated user identifier (user IDs).
Sentence 459: In Windows parlance, this is a security ID (SID).
Sentence 460: These numerical IDs are unique, one per user.
Sentence 461: When a user logs in to thesystem,theauthenticationstagedeterminestheappropriateuser IDforthe user.
Sentence 462: That user IDis associated with all of the user’s processes and threads.
Sentence 463: When an IDneeds to be readable by a user, it is translated back to the user name viathe username list.
Sentence 464: In some circumstances, we wish to distinguish among sets of users rather thanindividualusers.Forexample,theownerofafileona UNIXsystemmaybe allowedtoissuealloperationsonthatfile,whereasaselectedsetofusersmay beallowedonlytoreadthe file.Toaccomplishthis,we needtodefineagroup name and the set of users belonging to that group.
Sentence 465: Group functionality can be implemented as a system-wide list of group names and group identifier .
Sentence 466: Auser can be in one or more groups, depending on operating-system design 34 Chapter 1 Introduction decisions.
Sentence 467: The user’s group IDs are also included in every associated process and thread.
Sentence 468: In the course of normal system use, the user IDand group IDfor a user are sufficient.
Sentence 469: However,a user sometimesneedsto escalate privileges to gain extra permissions for an activity.
Sentence 470: The user may need access to a device that is restricted, for example.
Sentence 471: Operating systems provide various methods to allow privilege escalation.
Sentence 472: On UNIX,f o ri n s t a n c e ,t h e setuidattribute on a program causesthatprogramtorunwiththeuser IDoftheownerofthefile,ratherthan thecurrentuser’s ID.Theprocessrunswiththis effective UIDuntilitturnsoff theextraprivilegesor terminates.
Sentence 473: 1.7 Virtualization Virtualization isatechnologythatallowsustoabstractthehardwareofasin- gle computer (the CPU, memory, disk drives, network interface cards, and so forth) into several different execution environments, thereby creating the illu- sion that each separate environment is running on its own private computer.
Sentence 474: These environments can be viewed as different individual operating systems (for example, Windows and UNIX) that may be running at the same time and may interact with each other.
Sentence 475: A user of a virtual machine can switch among the various operating systems in the same way a user can switch among the variousprocessesrunning concurrently in a singleoperatingsystem.
Sentence 476: Virtualizationallowsoperatingsystemstorunasapplicationswithinother operating systems.At first blush, there seemsto be littlereason for such func- tionality.
Sentence 477: But the virtualization industry is vast and growing, which is a testa- mentto itsutilityandimportance.
Sentence 478: Broadlyspeaking,virtualizationsoftwareisonememberofaclassthatalso includes emulation.
Sentence 479: Emulation , which involves simulating computer hard- ware in software, is typically usedwhen the source CPUtype is differentfrom the target CPUtype.
Sentence 480: For example, when Apple switched from the IBMPower CPUto the Intel x86 CPUfor its desktop and laptop computers, it included an emulation facility called “Rosetta, ”which allowed applications compiled for theIBMCPU torunontheIntel CPU.Thatsameconceptcanbeextendedtoallow anentireoperatingsystemwrittenforoneplatformtorunonanother.Emula- tioncomesataheavyprice,however.Everymachine-levelinstructionthatruns natively on the source system must be translated to the equivalent function on the target system, frequently resulting in several target instructions.
Sentence 481: If the source and target CPUs have similar performance levels, the emulated code may runmuch moreslowlythan thenativecode.
Sentence 482: With virtualization, in contrast, an operating system that is natively com- piled for a particular CPUarchitecture runs within another operating system also native to that CPU.
Sentence 483: Virtualization first came about on IBMmainframes as a method for multiple users to run tasks concurrently.
Sentence 484: Running multiple vir- tual machines allowed (and still allows) many users to run tasks on a system designedforasingleuser.Later,inresponsetoproblemswithrunningmultiple Microsoft Windows applications on the Intel x86 CPU,VMware created a new virtualization technology in the form of an application that ran on Windows.
Sentence 485: That application ran one or more guestcopies of Windows or other native x86 operating systems, each running its own applications.
Sentence 486: (See Figure 1.16.) 1.8 Distributed Systems 35 (a)processes hardwarekernel (b)programming interfaceprocesses processesprocesses kernel kernel kernel VM2 VM1 VM3 manager hardwarevirtual machine Figure 1.16 A computer running (a) a single operating system and (b) three virtual machines.
Sentence 487: Windows was the hostoperatingsystem,andthe VMwareapplicationwasthe virtual machine manager (VMM).TheVMMrunstheguestoperatingsystems, managestheirresourceuse,and protectseach guestfrom theothers.
Sentence 488: Eventhoughmodernoperatingsystemsarefullycapableofrunningmulti- pleapplicationsreliably,theuseofvirtualizationcontinuestogrow.Onlaptops and desktops,a VMMallows the user to install multipleoperating systemsfor explorationortorunapplicationswrittenforoperatingsystemsotherthanthe native host.
Sentence 489: For example,an Apple laptop running mac OSon the x86 CPUcan run a Windows 10 guest to allow execution of Windows applications.
Sentence 490: Com- panies writing software for multiple operating systems can use virtualization to run all of those operating systems on a single physical server for develop- ment,testing,anddebugging.Withindatacenters,virtualizationhasbecomea commonmethodofexecutingandmanagingcomputingenvironments.
Sentence 491: VMMs likeVMwareESXandCitrixXenServernolongerrunonhostoperatingsystems but rather arethe host operating systems, providing services and resource managementto virtualmachine processes.
Sentence 492: With this text, we provide a Linux virtual machine that allows you to run Linux—as well as the development tools we provide—on your personal system regardless of your host operating system.
Sentence 493: Full details of the features andimplementationof virtualizationcan be found inChapter18.
Sentence 494: 1.8 Distributed Systems Adistributed system is a collection of physically separate, possibly heteroge- neous computer systems that are networked to provide users with access to the various resources that the system maintains.
Sentence 495: Access to a shared resource increases computation speed, functiona lity, data availability, and reliability.
Sentence 496: Someoperatingsystemsgeneralizenetworkaccessasaformoffileaccess,with the details of networking contained in the network interface’s device driver.
Sentence 497: 36 Chapter 1 Introduction Others make users specifically invoke network functions.
Sentence 498: Generally, systems contain a mix of the two modes—for example FTPandNFS.
Sentence 499: The protocols that create a distributed system can greatly affect that system’s utility and popularity.
Sentence 500: Anetwork ,inthesimplestterms,isacommunicationpathbetweentwoor moresystems.Distributedsystemsdependonnetworkingfortheirfunctional- ity.Networksvarybytheprotocolsused,thedistancesbetweennodes,andthe transportmedia.
Sentence 501: TCP/IPisthemostcommonnetworkprotocol,anditprovides the fundamental architecture of the Int ernet.
Sentence 502: Most operating systems support TCP/IP,includingallgeneral-purposeones.Somesystemssupportproprietary protocols tosuittheirneeds.Foranoperatingsystem,itisnecessaryonly that anetworkprotocolhaveaninterfacedevice—anetworkadapter,forexample —with a devicedriverto manage it, as well as software to handle data.These concepts are discussedthroughout thisbook.
Sentence 503: Networks are characterized based on the distances between their nodes.
Sentence 504: Alocal-area network (LAN) connects computers within a room, a building, or a campus.
Sentence 505: A wide-area network (WAN) usually links buildings, cities, or countries.Aglobalcompanymayhavea WANtoconnectitsofficesworldwide, for example.
Sentence 506: These networks may run one protocol or several protocols.
Sentence 507: The continuing advent of new technologies brings about new forms of networks.
Sentence 508: Forexample,a metropolitan-area network (MAN)couldlinkbuildingswithin a city.
Sentence 509: BlueTooth and 802.11 devices use wireless technology to communicate over a distance of several feet, in essence creating a personal-area network (PAN)betweenaphoneandaheadsetorasmartphoneandadesktopcomputer.
Sentence 510: Themediatocarrynetworksareequallyvaried.Theyincludecopperwires, fiberstrands,andwirelesstransmission sbetweensatellites,microwavedishes, and radios.
Sentence 511: When computing devices are connected to cellular phones, they create a network.
Sentence 512: Even very short-range infrared communication can be used for networking.
Sentence 513: At a rudimentary level, whenever computers communicate, they use or create a network.
Sentence 514: These networks also vary in their performance and reliability.
Sentence 515: Some operating systems have taken the concept of networks and dis- tributed systems further than the notion of providing network connectivity.
Sentence 516: Anetwork operating system is an operating system that provides features such as file sharing across the network, along with a communication scheme that allows different processes on different computers to exchange messages.
Sentence 517: Acomputer running a network operating system acts autonomously from all other computers on the network, although it is aware of the network and is able to communicate with other networked computers.
Sentence 518: Adistributed operat- ingsystemprovidesalessautonomousenvironment.Thedifferentcomputers communicate closely enough to providethe illusion that only a single operat- ingsystemcontrolsthenetwork.Weco vercomputernetworksanddistributed systemsinChapter19.
Sentence 519: 1.9 Kernel Data Structures We turn next to a topic central to operating-system implementation: the way data are structured in the system.
Sentence 520: In this section, we briefly describe several fundamental data structures used extensively in operating systems.
Sentence 521: Readers 1.9 Kernel Data Structures 37 data data data null   Figure 1.17 Singly linked list.
Sentence 522: whorequirefurtherdetailsonthesestructures,aswellasothers,shouldconsult the bibliography at the end of the chapter.
Sentence 523: 1.9.1 Lists, Stacks, and Queues An array is a simple data structure in which each element can be accessed directly.Forexample,mainmemoryisconstructedasanarray.Ifthedataitem beingstoredislargerthanonebyte,thenmultiplebytescanbeallocatedtothe item,and the item is addressedas “item number ×item size.
Sentence 524: ”B u tw h a ta b o u t storinganitemwhosesizemayvary?Andwhataboutremovinganitemifthe relativepositionsoftheremainingitemsmustbepreserved?Insuchsituations, arraysgiveway to other datastructures.
Sentence 525: Afterarrays,listsareperhapsthemostfundamentaldatastructuresincom- puterscience.Whereaseachiteminanarraycanbeaccesseddirectly,theitems inalistmustbeaccessedinaparticularorder.Thatis,a listrepresentsacollec- tionofdatavaluesasasequence.Themostcommonmethodforimplementing thisstructureisa linked list , inwhich itemsarelinkedtoone another.Linked listsareof severaltypes: •In asingly linked list, each item points to its successor, as illustrated in Figure1.17.
Sentence 526: •Inadoubly linked list, agivenitemcanrefereithertoitspredecessororto itssuccessor, as illustratedinFigure1.18.
Sentence 527: •In a circularly linked list, the last element in the list refers to the first element,ratherthan to null,asillustratedinFigure1.19.
Sentence 528: Linked lists accommodate items of varying sizes and allow easy insertion and deletion of items.
Sentence 529: One potential disadvantage of using a list is that per- formance for retrieving a specified item in a list of size nis linear— O(n), as it requirespotentiallytraversingall nelementsintheworstcase.Listsaresome- timesuseddirectlybykernelalgorithms.Frequently,though,theyareusedfor constructing more powerfuldata structures,such as stacks and queues.
Sentence 530: Astackis a sequentially ordered data structure that uses the last in, first out( LIFO)principleforaddingandremovingitems,meaningthatthelastitem data null null data data data   Figure 1.18 Doubly linked list.
Sentence 531: 38 Chapter 1 Introduction data data data data   Figure 1.19 Circularly linked list.
Sentence 532: placed onto a stack is the first itemremoved.The operations for inserting and removing items from a stack are known as pushandpop, respectively.
Sentence 533: An operatingsystemoftenusesastackwheninvokingfunctioncalls.Parameters, local variables, and the return address are pushed onto the stack when a function is called; returning from the function call pops those items off the stack.
Sentence 534: Aqueue,incontrast, is a sequentiallyordereddata structure that uses the first in, first out ( FIFO) principle:items areremovedfrom a queuein the order in which they were inserted.
Sentence 535: There are many everyday examples of queues, includingshopperswaitinginacheckout lineatastoreandcarswaitinginline at a traffic signal.
Sentence 536: Queues are also quite common in operating systems—jobs that are sent to a printer are typically printed in the order in which they were submitted,for example.Aswe shallseeinChapter5, tasksthat arewaiting to be runon an available CPUareoftenorganizedinqueues.
Sentence 537: 1.9.2 Trees Atreeisadatastructurethatcanbeusedtorepresentdatahierarchically.Data values in a tree structure are linked through parent–child relationships.
Sentence 538: In a general tree , a parent may have an unlimitednumber of children.
Sentence 539: In a binary tree, a parent may have at most two children, which we term the left child and the right child .Abinary search tree additionally requires an ordering betweentheparent’stwochildreninwhich left child<=right  child.Figure1.20 provides an example of a binary search tree.
Sentence 540: When we search for an item in a binary search tree, the worst-case performance is O(n) (consider how this can occur).Toremedythissituation,wecanusean algorithmtocreatea balanced binary search tree .Here,atreecontaining nitemshasatmost lg nlevels,thus ensuring worst-case performance of O(lg n).
Sentence 541: We shall see in Section 5.7.1 that Linux uses a balanced binary search tree (known as a red-black tree )a sp a r t itsCPU-scheduling algorithm.
Sentence 542: 1.9.3 Hash Functions and Maps Ahash function takes data as its input, performs a numeric operation on the data, and returns a numeric value.
Sentence 543: This numeric value can then be used as an index into a table (typically an array) to quickly retrievethe data.
Sentence 544: Whereas searchingforadataitemthroughalistofsize ncanrequireupto O(n)compar- isons, using a hash function for retrieving data from a table can be as good as O(1),dependingonimplementationdetails.Becauseofthisperformance,hash functions areusedextensivelyinoperatingsystems.
Sentence 545: One potential difficulty with hash functions is that two unique inputs can result in the same output value—that is, they can link to the same table 1.9 Kernel Data Structures 39 17 35 40 3812 14 6 Figure 1.20 Binary search tree.
Sentence 546: location.Wecanaccommodatethis hash collision byhavingalinkedlistatthe tablelocationthatcontainsalloftheitemswiththesamehashvalue.Ofcourse, the more collisions thereare,the lessefficientthe hash function is.
Sentence 547: O n eu s eo fah a s hf u n c t i o ni st oi m p l e m e n ta hash map , which associates (ormaps) [key:value]pairs using a hash function.
Sentence 548: Once the mapping is estab- lished, we can apply the hash function to the key to obtain the value from the hash map (Figure 1.21).
Sentence 549: For example, suppose that a user name is mapped to a password.
Sentence 550: Password authentication then proceeds as follows: a user enters her user name and password.
Sentence 551: The hash function is applied to the user name, which is then used to retrieve the password.
Sentence 552: The retrieved password is then comparedwith the passwordenteredby theuserfor authentication.
Sentence 553: 1.9.4 Bitmaps Abitmapisastringof nbinarydigitsthatcanbeusedtorepresentthestatusof nitems.
Sentence 554: For example, suppose we have several resources, and the availability of each resource is indicated by the value of a binary digit: 0 means that the resourceisavailable,while1indicatesth atitisunavailable(orviceversa).The 01 ..
Sentence 555: n valuehash maphash_function(key) Figure 1.21 Hash map.
Sentence 556: 40 Chapter 1 Introduction LINUX KERNEL DATA STRUCTURES ThedatastructuresusedintheLinuxkernelareavailableinthekernelsource code.
Sentence 557: The includefile<linux/list.h >provides details of the linked-list data structure used throughout the kernel.
Sentence 558: Aqueue in Linux is known as a kfifo,anditsimplementationcanbefoundinthe kfifo.c fileinthe kernel directoryofthesourcecode.Linuxalsoprovidesabalancedbinarysearchtree implementationusing red-black trees .Detailscanbefoundintheincludefile <linux/rbtree.h >.
Sentence 559: valueof the ithpositionin the bitmap is associatedwith the ithresource.
Sentence 560: As an example,considerthebitmap shown below: 001011101 Resources2,4,5,6,and8areunavailable;resources0,1,3,and7areavailable.
Sentence 561: The power of bitmaps becomes apparent when we consider their space efficiency.
Sentence 562: If we were to use an eight-bit Boolean value instead of a single bit, the resulting data structure would be eight times larger.
Sentence 563: Thus, bitmaps are commonly used when there is a need to represent the availability of a large number of resources.
Sentence 564: Disk drives provide a nice illustration.
Sentence 565: Amedium-sized diskdrivemightbedividedintoseveralthousandindividualunits,called disk blocks.Abitmapcan beusedto indicatetheavailabilityofeach diskblock.
Sentence 566: Insummary,datastructuresarepervasiveinoperatingsystemimplemen- tations.
Sentence 567: Thus, we will see the structures discussed here, along with others, throughout this text as we explore kernel algorithms and their implementa- tions.
Sentence 568: 1.10 Computing Environments So far, we have briefly described several aspects of computer systems and the operating systems that manage them.
Sentence 569: We turn now to a discussion of how operatingsystemsareusedina varietyof computing environments.
Sentence 570: 1.10.1 Traditional Computing As computing has matured, the lines se parating many of the traditional com- putingenvironmentshaveblurred.Considerthe “typicalofficeenvironment.
Sentence 571: ” Justafewyearsago,thisenvironmentconsistedof PCsconnectedtoanetwork, with servers providing file and print services.
Sentence 572: Remote access was awkward, and portabilitywas achievedby useof laptopcomputers.
Sentence 573: Today,webtechnologiesandincreasing WANbandwidtharestretchingthe boundariesoftraditionalcomputing.Companiesestablish portals,whichpro- vide web accessibility to their internal servers.
Sentence 574: Network computers (orthin clients)—whichareessentiallyterminalsthatunderstandweb-basedcomput- ing—are used in place of traditional workstations where more security or easier maintenance is desired.
Sentence 575: Mobile computers can synchronize with PCs to allow very portable use of company information.
Sentence 576: Mobile devices can also 1.10 Computing Environments 41 connectto wireless networks andcellulardatanetworkstousethecompany’s web portal(aswellas themyriadother web resources).
Sentence 577: Athome,mostusersoncehad asinglecomputerwithaslowmodemcon- nection to the office, the Internet, or both.
Sentence 578: Today, network-connection speeds once available only at great cost are relatively inexpensive in many places, giving home users more access to more data.
Sentence 579: These fast data connections are allowing home computers to serve up web pages and to run networks that include printers, client PCs, and servers.
Sentence 580: Many homes use firewall to pro- tecttheirnetworksfromsecuritybreaches.Firewallslimitthecommunications betweendevicesona network.
Sentence 581: In the latter half of the 20th century, computing resources were relatively scarce.(Beforethat,theywerenonexistent!)Foraperiodoftime,systemswere either batch or interactive.
Sentence 582: Batch systems processed jobs in bulk, with prede- terminedinputfromfilesorotherdatasources.Interactivesystemswaitedfor input from users.
Sentence 583: To optimize the use of the computing resources, multiple users shared time on these systems.
Sentence 584: These time-sharing systems used a timer and scheduling algorithms to cycle processes rapidlythrough the CPU, giving eachusera shareof theresources.
Sentence 585: Traditionaltime-sharingsystemsare raretoday.Thesameschedulingtech- nique is still in use on desktop computers, laptops, servers, and even mobile computers, but frequently all the processes are owned by the same user (or a single user and the operating system).
Sentence 586: User processes, and system processes that provide services to the user, are managed so that each frequently gets a sliceofcomputertime.Considerthewindowscreatedwhileauserisworking on aPC, for example,and the fact that they may be performing differenttasks atthesametime.Evenawebbrowsercanbecomposedofmultipleprocesses, oneforeachwebsitecurrentlybeingvisited,withtimesharingappliedtoeach web browserprocess.
Sentence 587: 1.10.2 Mobile Computing Mobile computing refers to computing on handh eld smartphones and tablet computers.
Sentence 588: These devices share the distinguishing physical features of being portable and lightweight.
Sentence 589: Historically, compared with desktop and laptop computers,mobilesystemsgaveupscreensize,memorycapacity,andoverall functionality in return for handheld mobile access to services such as e-mail and web browsing.
Sentence 590: Over the past few years, however, features on mobile deviceshave become so rich that the dist inction in functionality between, say, a consumer laptop and a tablet computer may be difficult to discern.
Sentence 591: In fact, we might argue that the features of a contemporary mobile device allow it to provide functionality that is either unavailable or impractical on a desktop or laptopcomputer.
Sentence 592: Today,mobilesystemsareusednot only fore-mailand web browsing but also for playing music and video, reading digital books, taking photos, and recordingandeditinghigh-definitionvideo.Accordingly,tremendousgrowth continues in the wide range of applications that run on such devices.
Sentence 593: Many developers are now designing applications that take advantage of the unique features of mobile devices, such as global positioning system ( GPS)c h i p s , accelerometers,andgyroscopes.Anembedded GPSchipallowsamobiledevice tousesatellitestodetermineitsprecisel ocationonEarth.Thatfunctionalityis 42 Chapter 1 Introduction especiallyusefulindesigningapplicationsthatprovidenavigation—forexam- ple, telling users which way to walk or drive or perhaps directing them to nearby services,such as restaurants .Anaccelerometerallows a mobiledevice to detect its orientation with respect to the ground and to detect certain other forces, such as tilting and shaking.
Sentence 594: In several computer games that employ accelerometers, players interface with the system not by using a mouse or a keyboardbutratherbytilting,rotating,andshakingthemobiledevice!Perhaps more a practical use of these features is found in augmented-reality appli- cations, which overlay information on a display of the current environment.
Sentence 595: It is difficult to imagine how equivalent applications could be developed on traditionallaptopor desktopcomputersystems.
Sentence 596: To provide access to on-line services, mobile devices typically use either IEEEstandard 802.11 wirelessor cellular data networks.
Sentence 597: The memory capacity andprocessingspeedofmobiledevices,however,aremorelimitedthanthose ofPCs. Whereas a smartphone or tablet may have 256 GBin storage, it is not uncommon to find 8 TBin storage on a desktop computer.
Sentence 598: Similarly, because powerconsumptionissuchaconcern,mobiledevicesoftenuseprocessorsthat aresmaller,areslower,andofferfewerprocessingcoresthanprocessorsfound on traditionaldesktopand laptopcomputers.
Sentence 599: Two operating systems currently dominate mobile computing: Apple i OS and Google Android .iOSw a sd e s i g n e dt or u no nA p p l ei P h o n ea n di P a d mobile devices.Android powers smartph ones and tablet computers available frommanymanufacturers.Weexaminethesetwomobileoperatingsystemsin furtherdetailin Chapter2.
Sentence 600: 1.10.3 Client–Server Computing Contemporary network architecture features arrangements in which server systems satisfyrequestsgeneratedby client systems .Thisformofspecialized distributed system, called a client–server system, has the general structure depictedinFigure1.22.
Sentence 601: Server systems can be broadly categorized as compute servers and file servers: •The compute-server system provides an interface to which a client can send a requestto perform an action (for example, read data).
Sentence 602: In response, the server executes the action and sends the results to the client.
Sentence 603: Aserver server networkclient desktop client laptop client smartphone Figure 1.22 General structure of a client–server system.
Sentence 604: 1.10 Computing Environments 43 running adatabase thatrespondstoclientrequestsfor dataisan example of such asystem.
Sentence 605: •The file-serve system provides a file-system interface where clients can create, update, read, and delete files.
Sentence 606: An example of such a system is a web server that delivers files to clients running web browsers.
Sentence 607: The actual contents of the files can vary greatly, ranging from traditional web pages to richmultimediacontent such ashigh-definition video.
Sentence 608: 1.10.4 Peer-to-Peer Computing Another structure for a distributed system is the peer-to-peer ( P2P) system model.
Sentence 609: In this model, clients and servers are not distinguished from one another.
Sentence 610: Instead, all nodes within th e system are considered peers, and each may act as eithera client or a server,dependingonwhether it is requestingor providing a service.
Sentence 611: Peer-to-peer systems offer an advantage over traditional client–serversystems.Inaclient–serversystem,theserverisabottleneck;but inapeer-to-peersystem,servicescanbeprovidedbyseveralnodesdistributed throughout the network.
Sentence 612: To participate in a peer-to-peersystem, a node must first join the network of peers.
Sentence 613: Once a node has joined the network, it can begin providing services to—and requesting services from—other nodes in the network.
Sentence 614: Determining what servicesareavailableisaccomplishedin one of two generalways: •When a node joins a network, it registers its service with a centralized lookup service on the network.
Sentence 615: Any node desiring a specific service first contactsthiscentralizedlookupservicetodeterminewhichnodeprovides the service.The remainderof the communication takes placebetween the client andthe serviceprovider.
Sentence 616: •An alternative scheme uses no centralized lookup service.
Sentence 617: Instead, a peer acting as a client must discover what node provides a desired service by broadcasting a request for the service to all other nodes in the network.
Sentence 618: The node (or nodes) providing that service responds to the peer making the request.
Sentence 619: To support this approach, a discovery protocol must be pro- videdthatallowspeerstodiscoverservicesprovidedbyotherpeersinthe network.
Sentence 620: Figure1.23 illustratessuch ascenario.
Sentence 621: Peer-to-peernetworksgainedwidespreadpopularityinthelate1990swith severalfile-sharingservices,suchasNapsterandGnutella,thatenabledpeers toexchangefileswithoneanother.TheNapstersystemusedanapproachsimi- lartothefirsttypedescribedabove:acentralizedservermaintainedanindexof allfilesstoredon peernodesin the Napsternetwork, and the actual exchange of files took place between the peer nodes.
Sentence 622: The Gnutella system used a tech- niquesimilartothesecondtype:aclientbroadcastfilerequeststoothernodes in the system, and nodes that could service the request responded directly to the client.
Sentence 623: Peer-to-peer networks can be used to exchange copyrighted mate- rials (music, for example) anonymously, and there are laws governing the distribution of copyrighted material.
Sentence 624: Notably, Napster ran into legal trouble for copyright infringement, and its services were shut down in 2001.
Sentence 625: For this reason, the future of exchanging filesremainsuncertain.
Sentence 626: 44 Chapter 1 Introduction client client client client client Figure 1.23 Peer-to-peer system with no centralized service.
Sentence 627: Skype is another example of peer-to-peer computing.
Sentence 628: It allows clients to make voice calls and video calls and to send text messages over the Internet using a technology known as voice over IP(VoIP).
Sentence 629: Skype uses a hybrid peer- to-peerapproach.Itincludesacentralizedloginserver,butitalsoincorporates decentralizedpeersand allowstwo peerstocommunicate.
Sentence 630: 1.10.5 Cloud Computing Cloud computing is a type of computing that delivers computing, storage, and even applications as a service across a network.
Sentence 631: In some ways, it’s a logical extension of virtualization, because it uses virtualization as a base for itsfunctionality.Forexample,theAmazonElasticComputeCloud( ec2)facility hasthousandsofservers,millionsofvirtualmachines,andpetabytesofstorage available for use by anyone on the Internet.
Sentence 632: Users pay per month based on howmuchofthoseresourcestheyuse.Thereareactuallymanytypesofcloud computing, includingthe following: •Public cloud —a cloud availableviatheInternettoanyone willingto pay for theservices •Private cloud —a cloud run by a company for that company’s own use •Hybrid cloud —a cloud that includesboth public and private cloud com- ponents •Software as a service ( SaaS)—one or more applications (such as word processorsor spreadsheets)availableviatheInternet •Platform as a service ( PaaS)—a software stack ready for application use viatheInternet(for example,adatabase server) •Infrastructure as a service ( IaaS)—servers or storage available over the Internet (for example, storage available for making backup copies of pro- duction data) 1.10 Computing Environments 45 firewallcloud customer interface load balancer virtual machinesvirtual machines servers serversstorageInternet customer requests cloud management commands cloud managment services Figure 1.24 Cloud computing.
Sentence 633: These cloud-computing types are not discrete, as a cloud computing environ- ment may provide a combination of several types.
Sentence 634: For example, an organiza- tionmay providebothSaaSand IaaSas publiclyavailableservices.
Sentence 635: Certainly,therearetraditionaloperatingsystemswithinmanyofthetypes of cloud infrastructure.
Sentence 636: Beyond those are the VMMs that manage the virtual machines in which the user processes run.
Sentence 637: At a higher level, the VMMst h e m - selves are managed by cloud management tools, such as VMware vCloud Director and the open-source Eucalyptus toolset.
Sentence 638: These tools manage the resourceswithinagivencloudandprovideinterfacestothecloudcomponents, makingagoodargumentforconsideringthemanewtypeofoperatingsystem.
Sentence 639: Figure 1.24 illustrates a public cloud providing IaaS.
Sentence 640: Notice that both the cloudservicesand thecloud userinterfaceareprotectedby a firewall.
Sentence 641: 1.10.6 Real-Time Embedded Systems Embedded computers are the most prevalent form of computers in existence.
Sentence 642: These devices are found everywhere, from car engines and manufacturing robotstoopticaldrivesandmicrowaveovens.Theytendtohaveveryspecific tasks.
Sentence 643: The systems they run on are usually primitive, and so the operating systemsprovidelimitedfeatures.Usually,theyhavelittleornouserinterface, preferring to spend their time monitoring and managing hardware devices, such as automobile enginesand robotic arms.
Sentence 644: These embedded systems vary considerably.
Sentence 645: Some are general-purpose computers, running standard operating systems—such as Linux—with special-purpose applications to implement the functionality.
Sentence 646: Others are hardware devices with a special-purpose embedded operating system providing just the functionality desired.
Sentence 647: Yet others are hardware devices 46 Chapter 1 Introduction with application-specific integrated circuits ( ASIC s) that perform their tasks without an operating system.
Sentence 648: The use of embedded systems continues to expand.
Sentence 649: The power of these devices,both as standaloneunits and as elementsofnetworks and theweb, is suretoincreaseaswell.Evennow,entirehousescanbecomputerized,sothata centralcomputer—eitherageneral-purposecomputeroranembeddedsystem —can control heating and lighting, alarm systems, and even coffee makers.
Sentence 650: Web access can enable a home owner to tell the house to heat up before she arriveshome.Someday,therefrigeratorwillbeabletonotifythegrocerystore when itnoticesthe milkisgone.
Sentence 651: Embeddedsystemsalmostalwaysrun real-time operating systems .Areal- time system is used when rigid time requirements have been placed on the operation of a processor or the flow of data; thus, it is often used as a control deviceinadedicatedapplication.Sensorsbringdatatothecomputer.Thecom- putermustanalyze the dataand possiblyadjustcontrols tomodifythe sensor inputs.
Sentence 652: Systems that control scientific e xperiments, medical imaging systems, industrial control systems, and certain display systems are real-time systems.
Sentence 653: Some automobile-engine fuel-injectio n systems, home-appliance controllers, and weaponsystemsarealsoreal-timesystems.
Sentence 654: A real-time system has well-defined, fixed time constraints.
Sentence 655: Processing mustbe done within the defined constraints, or the system will fail.
Sentence 656: For instance, it would not do for a robot arm to be instructed to halt afterit had smashed into the car it was building.
Sentence 657: A real-time system functions correctly onlyifitreturnsthecorrectresultwithinitstimeconstraints.Contrastthissys- temwithatraditionallaptopsystemwhereitisdesirable(butnotmandatory) to respondquickly.
Sentence 658: InChapter5,weconsidertheschedu lingfacilityneededtoimplementreal- time functionality in an operating system, and in Chapter 20 we describe the real-timecomponents of Linux.
Sentence 659: 1.11 Free and Open-Source Operating Systems The study of operating systems has been made easier by the avail- ability of a vast number of free software and open-source releases.
Sentence 660: Both free operating systems and open-source operating systems are available in source-code format rather than as compiled binary code.
Sentence 661: Note, though, that free software and open-source software are two different ideas championed by different groups of people (see http://gnu.org/philosophy/open-source-misses-the-point.html/ for a discussion on the topic).
Sentence 662: Free software (sometimes referred to as free/libre software ) not only makes source code available but also is licensed to allow no-cost use, redistribution, and modification.
Sentence 663: Open-source software does not necessarily offer such licensing.
Sentence 664: Thus, although all free software is open source, some open-source software is not “free.
Sentence 665: ”GNU/Linux is the most famous open-source operating system, with some distributions free and others open source only ( http://www.gnu.org/distros/ ).
Sentence 666: Microsoft Windows is a well-known example of the opposite closed-source approach.
Sentence 667: Windows isproprietary software—Microsoft owns it, restricts its use, and carefully protects its source code.
Sentence 668: Apple’s mac OSoperating system comprises a hybrid 1.11 Free and Open-Source Operating Systems 47 approach.
Sentence 669: It contains an open-source kernel named Darwin but includes proprietary,closed-sourcecomponents as well.
Sentence 670: Starting with the source code allows the programmer to produce binary code that can be executed on a system.
Sentence 671: Doing the opposite— reverse engi- neering the source code from the binaries—is quite a lot of work, and useful items such as comments are never recovered.
Sentence 672: Learning operating systems by examining the source code has other benefits as well.
Sentence 673: With the source code in hand, a student can modify the operating system and then compile and run the code to try out those changes, which is an excellent learning tool.
Sentence 674: This text includes projects that invo lve modifying operating-system source code, while also describing algorithms at a high level to be sure all important operating-systemtopicsarecovered.Throughoutthetext,weprovidepointers toexamplesof open-source codefor deeperstudy.
Sentence 675: There are many benefits to open-source operating systems, including a communityofinterested(andusuallyunpaid)programmerswhocontributeto thecodeby helpingto writeit,debugit,analyze it,providesupport,and sug- gest changes.
Sentence 676: Arguably, open-source code is more secure than closed-source code because many more eyes are viewing the code.
Sentence 677: Certainly, open-source code has bugs, but open-source advocates argue that bugs tend to be found and fixed faster owing to the number o f people using and viewing the code.
Sentence 678: Companies that earn revenue from selling their programs often hesitate to open-sourcetheircode,butRedHatan damyriadofothercompaniesaredoing just that and showing that commercial companies benefit, rather than suffer, whentheyopen-sourcetheircode.Revenuecanbegeneratedthroughsupport contracts and the sale of hardware on which the software runs, for example.
Sentence 679: 1.11.1 History In the early days of modern computing (that is, the 1950s), software generally came with source code.
Sentence 680: The original hackers (computer enthusiasts) at MIT’s TechModelRailroadClublefttheirprogramsindrawersforotherstoworkon.
Sentence 681: “Homebrew ”user groups exchanged code during their meetings.
Sentence 682: Company- specificusergroups,suchasDigitalEquipmentCorporation’s DECUS,accepted contributions of source-code programs , collected them onto tapes, and dis- tributed the tapes to interested members.
Sentence 683: In 1970, Digital’s operating systems weredistributedas sourcecodewithno restrictionsor copyright notice.
Sentence 684: Computer and software companies eventually sought to limit the use of theirsoftwaretoauthorizedcomputersandpayingcustomers.Releasingonly the binary files compiled from the source code, rather than the source code itself,helpedthemtoachievethisgoal,aswellasprotectingtheircodeandtheir ideasfromtheircompetitors.AlthoughtheHomebrewusergroupsofthe1970s exchanged code during their meetings, the operating systems for hobbyist machines (such as CPM) were proprietary.
Sentence 685: By 1980, proprietary software was the usual case.
Sentence 686: 1.11.2 Free Operating Systems Tocounterthemovetolimitsoftwareuseandredistribution,RichardStallman in 1984 started developing a free, UNIX-compatible operating system called GNU(whichisarecursiveacronymfor “GNU’sNotUnix!
Sentence 687: ”).ToStallman, “free ” referstofreedomofuse,notprice.Thefree-softwaremovementdoesnotobject 48 Chapter 1 Introduction to trading a copy for an amount of money but holds that users are entitled to four certain freedoms: (1) to freely run the program, (2) to study and change thesourcecode,andtogiveorsellcopieseither(3)withor(4)withoutchanges.
Sentence 688: In1985,Stallmanpublishedthe GNUManifesto,whicharguesthatallsoftware should be free.
Sentence 689: He also formed the Free Software Foundation (FSF)w i t ht h e goal of encouraging theuseand developmentof freesoftware.
Sentence 690: TheFSFuses the copyrights on its programs to implement “copyleft, ”a form oflicensing inventedby Stallman.Copyleftingawork givesanyone that possesses a copy of the work the four essential freedoms that make the work free,with thecondition that redistributionmustpreservethesefreedoms.The GNU General Public License (GPL) is a common license under which free software is released.
Sentence 691: Fundamentally, the GPLr e q u i r e st h a tt h es o u r c ec o d eb e distributedwithanybinariesandthatallcopies(includingmodifiedversions) be released under the same GPLlicense.
Sentence 692: The Creative Commons “Attribution Sharealike ”license is also a copyleft license; “sharealike ”is another way of stating theideaof copyleft.
Sentence 693: 1.11.3 GNU/Linux As an example of a free and open-source operating system, consider GNU /Linux.
Sentence 694: By 1991, the GNUoperating system was nearly complete.
Sentence 695: The GNUProject had developed compilers, editors, utilities, libraries, and games — whateverpartsitcouldnotfindelsewhere.However,the GNUkernelnever became ready for prime time.
Sentence 696: In 1991, a student in Finland, Linus Torvalds, released a rudimentary UNIX-like kernel using the GNUcompilers and tools and invited contributions worldwide.
Sentence 697: The advent of the Internet meant that anyone interested could download the source code, modify it, and submit changes to Torvalds.
Sentence 698: Releasing updates once a week allowed this so-called “Linux ”operating system to grow rapidly, enhanced by several thousand programmers.
Sentence 699: In 1991, Linux was not free software, as its license permitted only noncommercial redistribution.
Sentence 700: In 1992, however, Torvalds rereleased Linux under the GPL, making it free software (and also, to use a term coined later, “open source ”).
Sentence 701: The resulting GNU/Linux operating system (with the kernel properly called Linux but the full operating system including GNUtools called GNU/Linux) has spawned hundreds of unique distributions ,o rc u s t o m builds, of the system.
Sentence 702: Major distributions include Red Hat, SUSE,F e d o r a , Debian, Slackware, and Ubuntu.
Sentence 703: Distributions vary in function, utility, installed applications, hardware support, user interface, and purpose.
Sentence 704: For example, Red Hat Enterprise Linux is geared to large commercial use.
Sentence 705: PCLinuxOSis a live CD—an operating system that can be booted and run from a CD-ROM without being installed on a system’s boot disk.
Sentence 706: Avariant of PCLinuxOS—called PCLinuxOSSupergamer DVD—isa live DVDthatincludes graphics drivers and games.
Sentence 707: A gamer can run it on any compatible system simply by booting from the DVD.
Sentence 708: When the gamer is finished, a reboot of the systemresetsitto itsinstalledoperatingsystem.
Sentence 709: You can run Linux on a Windows (or other) system using the following simple,freeapproach: 1.11 Free and Open-Source Operating Systems 49 1.Do w n lo a dth ef r eeV irtu a lb o x VMMtool from https://www.virtualbox.org/ and installiton your system.
Sentence 710: 2.Choose to install an operating system from scratch, based on an installationimagelikea CD,orchoosepre-builtoperating-systemimages that can be installedand run morequickly froma sitelike http://virtualboxes.org/images/ These images are preinstalled with operating systems and applications and include many flavorsof GNU/Linux.
Sentence 711: 3.Bootthe virtualmachine within Virtualbox.
Sentence 712: An alternative to using Virtualbox is to use the free program Qemu (http://wiki.qemu.org/Download/ ), which includes the qemu-img command forconverting Virtualbox imagestoQemuimagesto easilyimportthem.
Sentence 713: Withthistext,weprovideavirtualmachineimageof GNU/Linuxrunning theUbunturelease.Thisimagecontainsthe GNU/Linuxsourcecodeaswellas toolsforsoftwaredevelopment.Wecoverexamplesinvolvingthe GNU/Linux imagethroughout this text,as wellasina detailedcasestudyinChapter20.
Sentence 714: 1.11.4 BSD UNIX BSD UNIX has a longer and more complicated history than Linux.
Sentence 715: It started in 1978asaderivativeof AT&T’sUNIX.ReleasesfromtheUniversityofCalifornia at Berkeley ( UCB) came in source and binary form, but they were not open sourcebecausealicensefrom AT&Twasrequired.
Sentence 716: BSDUNIX ’sdevelopmentwas slowed by a lawsuit by AT&T, but eventually a fully functional, open-source version,4.4BSD-lite,was releasedin1994.
Sentence 717: Just as with Linux, there are many distributions of BSD UNIX , including FreeBSD,N e tBSD,O p e nBSD,a n dD r a g o n fl y BSD.
Sentence 718: To explore the source code of FreeBSD, simply download the virtual machine image of the version of interest and boot it within Virtualbox, as described above for Linux.
Sentence 719: The source code comes with the distribution and is stored in /usr/src/ .T h e kernel source code is in /usr/src/sys .
Sentence 720: For example, to examine the vir- tual memory implementation code in the Free BSDkernel, see the files in /usr/src/sys/vm .Alternatively,youcansimplyviewthesourcecodeonline athttps://svnweb.freebsd.org .
Sentence 721: As with many open-source projects, this source code is contained in and controlled by a version control system —in this case, “subversion ” (https://subversion.apache.org/source-code ).
Sentence 722: Version control systems allow au s e rt o “pull ”an entire source code tree to his computer and “push ”any changes back into the repository for others to then pull.
Sentence 723: These systems also provide other features, including an entire history of each file and a conflict resolution feature in case the same file is changed concurrently.
Sentence 724: Another 50 Chapter 1 Introduction version control system is git,w h i c hi su s e df o r GNU/Linux, as well as other programs( http://www.git-scm.com ).
Sentence 725: Darwin, the core kernel component of mac OS,i sb a s e do n BSD UNIXand is open-sourced as well.
Sentence 726: That source code is available from http://www.opensource.apple.com/ .Everymac OSreleasehasitsopen-source components posted at that site.
Sentence 727: The name of the package that contains the kernel begins with “xnu.
Sentence 728: ”Apple also provides extensive developer tools, documentation, and support at http://developer.apple.com .
Sentence 729: THE STUDY OF OPERATING SYSTEMS There has never been a more interesting time to study operating systems, andithasneverbeeneasier.Theopen-sourcemovementhasovertakenoper- atingsystems,causingmanyofthemtobemadeavailableinbothsourceand binary (executable) format.
Sentence 730: The list o f operating systems available in both formatsincludesLinux, BSDUNIX ,Solaris,andpartofmac OS.Theavailabil- ity of source code allows us to study operating systems from the inside out.
Sentence 731: Questions that we could once answer only by looking at documentation or the behavior of an operating system we can now answer by examining the code itself.
Sentence 732: Operating systems that are no longer commercially viable have been open-sourced as well, enabling us to study how systems operated in a time of fewer CPU, memory, and storage resources.
Sentence 733: An extensive but incomplete list of open-source operatin g-system projects is available from http://dmoz.org/Computers/Software/Operating  Systems/Open  Source/.
Sentence 734: Inaddition,theriseofvirtualizationasamainstream(andfrequentlyfree) computer function makes it possible to run many operating systems on top of one core system.
Sentence 735: For example, VMware ( http://www.vmware.com )p r o - vides a free “player ”for Windows on which hundreds of free “virtual appli- ances ”can run.
Sentence 736: Virtualbox ( http://www.virtualbox.com ) provides a free, open-source virtual machine manag er on many operating systems.
Sentence 737: Using suchtools,studentscantryouthundredsofoperatingsystemswithoutded- icated hardware.
Sentence 738: In some cases, simulators of specific hardware are also available, allow- ing the operating system to run on “native ”hardware, all within the con- fines of a modern computer and modern operating system.
Sentence 739: For example, aDECSYSTEM-20 simulator running on mac OScan boot TOPS-20,l o a dt h e source tapes, and modify and compile a new TOPS-20 kernel.
Sentence 740: An interested student can search the Internet to find the original papers that describe the operatingsystem, as well as the original manuals.
Sentence 741: The advent of open-source operating systems has also made it easier to make the move from student to operat ing-system developer.
Sentence 742: With some knowledge,someeffort,andanInternetconnection,astudentcanevencreate a newoperating-systemdistribution.
Sentence 743: Not somany yearsago, it was difficult or impossible to get access to source code.
Sentence 744: Now, such access is limited only by howmuchinterest,time, anddisk spacea student has.
Sentence 745: 1.12 Summary 51 1.11.5 Solaris Solarisis the commercial UNIX-based operating system of Sun Microsystems.
Sentence 746: Originally,Sun’s Sun OSoperatingsystemwasbasedon BSDUNIX .Sunmoved toAT&T’s System V UNIXas its base in 1991.
Sentence 747: In 2005, Sun open-sourced most of the Solaris code as the OpenSolaris project.
Sentence 748: The purchase of Sun by Oracle in2009, however,leftthestateof thisprojectunclear.
Sentence 749: SeveralgroupsinterestedinusingOpenSolarishaveexpandeditsfeatures, and their working set is Project Illumos, which has expanded from the Open- Solaris base to include more features and to be the basis for several products.
Sentence 750: Illumosisavailableat http://wiki.illumos.org .
Sentence 751: 1.11.6 Open-Source Systems as Learning Tools The free-software movement is driving legions of programmers to create thousands of open-source projects, including operating systems.
Sentence 752: Sites like http://freshmeat.net/ and http://distrowatch.com/ provideportalstomanyof these projects.
Sentence 753: As we stated earlier, open-source projects enable students to use source code as a learning tool.
Sentence 754: They can modify programs and test them, help find and fix bugs, and otherwise explore mature, full-featured operating systems, compilers, tools, user interfaces, and other types of programs.
Sentence 755: The availability of source code for historic projects, such as Multics, can help stu- dentstounderstandthoseprojectsandt obuildknowledgethatwillhelpinthe implementationof newprojects.
Sentence 756: Anotheradvantageofworkingwithopen-sourceoperatingsystemsistheir diversity.
Sentence 757: GNU/Linux and BSD UNIX are both open-source operating systems, for instance, but each has its own goals, utility, licensing, and purpose.
Sentence 758: Some- times,licensesare not mutuallyexclusiveand cross-pollination occurs, allow- ing rapid improvements in operating-system projects.
Sentence 759: For example, several major components of OpenSolaris have been ported to BSD UNIX .
Sentence 760: The advan- tages of free software and open sourcing are likely to increase the number and quality of open-source projects, leading to an increase in the number of individualsand companies that usetheseprojects.
Sentence 761: 1.12 Summary •Anoperatingsystemissoftwarethatmanagesthecomputerhardware,as wellas providingan environmentfor application programstorun.
Sentence 762: •Interrupts are a key way in which hardware interacts with the operating system.Ahardwaredevicetriggersaninterruptbysendingasignaltothe CPUto alert the CPUthat some event requires attention.
Sentence 763: The interrupt is managed by the interrupthandler.
Sentence 764: •Foracomputertodoitsjobofexecutingprograms,theprogramsmustbe in main memory, which is the only large storage area that the processor can access directly.
Sentence 765: •Themainmemoryisusuallyavolatilestoragedevicethatlosesitscontents when poweristurned off or lost.
Sentence 766: 52 Chapter 1 Introduction •Nonvolatile storage is an extension of main memory and is capable of holding largequantitiesof datapermanently.
Sentence 767: •The most common nonvolatile storage device is a hard disk, which can providestorageof both programsand data.
Sentence 768: •Thewidevarietyofstoragesystemsinacomputersystemcanbeorganized inahierarchyaccordingtospeedandcost.Thehigherlevelsareexpensive, buttheyarefast.Aswemovedownthehierarchy,thecostperbitgenerally decreases,whereas theaccess timegenerallyincreases.
Sentence 769: •Moderncomputerarchitecturesaremultiprocessorsystemsinwhicheach CPUcontains severalcomputing cores.
Sentence 770: •Tobestutilizethe CPU,modernoperatingsystemsemploymultiprogram- ming, which allows several jobs to be in memory at the same time, thus ensuringthat the CPUalways has a job toexecute.
Sentence 771: •Multitasking is an extension of multiprogramming wherein CPUschedul- ing algorithms rapidly switch between processes, providing users with a fastresponsetime.
Sentence 772: •To prevent user programs from interfering with the proper operation of the system, the system hardware has two modes: user mode and kernel mode.
Sentence 773: •Various instructions are privileged and can be executed only in kernel mode.
Sentence 774: Examples include the instruction to switch to kernel mode, I/O control, timermanagement,and interruptmanagement.
Sentence 775: •A process is the fundamental unit of work in an operating system.
Sentence 776: Pro- cessmanagementincludescreatingand deletingprocessesandproviding mechanisms for processes to communicate and synchronize with each other.
Sentence 777: •An operating system manages memory by keeping track of what parts of memory are being used and by whom.
Sentence 778: It is also responsible for dynami- callyallocating and freeingmemoryspace.
Sentence 779: •Storagespaceismanagedbytheoperatingsystem;thisincludesproviding file systems for representing files and directories and managing space on mass-storagedevices.
Sentence 780: •Operating systems provide mechanisms for protecting and securing the operating system and users.
Sentence 781: Protection measures control the access of processesoruserstotheresourcesmadeavailablebythecomputersystem.
Sentence 782: •Virtualization involves abstracting a computer’s hardware into several differentexecutionenvironments.
Sentence 783: •Data structures that are used in an operating system include lists, stacks, queues,trees,andmaps.
Sentence 784: •Computingtakesplaceinavarietyofe nvironments,includingtraditional computing, mobile computing, client–server systems, peer-to-peer sys- tems,cloud computing,and real-timeembeddedsystems.
Sentence 785: Practice Exercises 53 •Free and open-source operating systems are available in source-code for- mat.
Sentence 786: Free software is licensed to allow no-cost use, redistribution, and modification.
Sentence 787: GNU/Linux, FreeBSD, and Solaris are examples of popular open-source systems.
Sentence 788: Practice Exercises 1.1What are the three main purposesof an operating system?
Sentence 789: 1.2Wehavestressedtheneedforanoperatingsystemtomakeefficientuse of the computing hardware.
Sentence 790: When is it appropriate for the operating system to forsake this principle and to “waste ”resources?
Sentence 791: Why is such a systemnot reallywasteful?
Sentence 792: 1.3Whatisthemaindifficultythataprogrammermustovercomeinwriting an operatingsystemfor a real-timeenvironment?
Sentence 793: 1.4Keeping in mind the various definitions of operating system, consider whether the operating system should include applications such as web browsers and mail programs.
Sentence 794: Argue both that it should and that it should not, and supportyour answers.
Sentence 795: 1.5Howdoesthedistinctionbetweenkernelmodeandusermodefunction as a rudimentaryform ofprotection(security)?
Sentence 796: 1.6Which of the following instructionsshould be privileged?
Sentence 797: a.
Sentence 798: Setvalueof timer.
Sentence 799: b.
Sentence 800: Read the clock.
Sentence 801: c.
Sentence 802: Clearmemory.
Sentence 803: d.
Sentence 804: Issuea trapinstruction.
Sentence 805: e.
Sentence 806: Turnoff interrupts.
Sentence 807: f.
Sentence 808: Modifyentriesindevice-statustable.
Sentence 809: g.
Sentence 810: Switchfrom usertokernelmode.
Sentence 811: h.
Sentence 812: Access I/Odevice.
Sentence 813: 1.7Some early computers protected the operating system by placing it in a memory partition that could not be modified by either the user job or theoperatingsystemitself.Describetwodifficultiesthatyouthinkcould arisewithsuch ascheme.
Sentence 814: 1.8SomeCPUsprovideformorethantwomodesofoperation.Whataretwo possibleusesof thesemultiplemodes?
Sentence 815: 1.9Timers could be used to compute the current time.
Sentence 816: Provide a short descriptionof how this could beaccomplished.
Sentence 817: 1.10Givetwo reasonswhy caches areuseful.What problemsdotheysolve?
Sentence 818: What problems do they cause?
Sentence 819: If a cache can be made as large as the
